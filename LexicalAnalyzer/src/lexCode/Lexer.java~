/* The following code was generated by JFlex 1.7.0 */

package lexCode;
import static lexCode.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/Bryan/Documents/NetBeansProjects/Lex_Analyzer/LexicalAnalyzer/src/lexCode/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\26\1\35\1\36\1\36\1\33\22\0\1\26\1\10\1\0"+
    "\1\23\1\0\1\5\1\11\1\34\1\17\1\20\1\3\1\1\1\13"+
    "\1\2\1\14\1\4\2\27\10\25\1\0\1\5\1\6\1\7\1\6"+
    "\1\0\1\5\1\44\1\54\1\52\1\45\1\42\1\43\1\60\1\53"+
    "\1\55\1\67\1\62\1\32\1\63\1\30\1\41\1\51\1\70\1\50"+
    "\1\56\1\47\1\31\1\65\1\64\1\46\1\57\1\61\1\15\1\0"+
    "\1\16\1\0\1\66\1\0\3\24\1\40\1\37\1\40\24\24\1\21"+
    "\1\12\1\22\7\0\1\36\u1fa2\0\1\36\1\36\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\5\2\2\1\1\3\5\2\1\4\1\5"+
    "\1\6\1\7\3\4\1\1\25\4\1\0\4\10\1\0"+
    "\1\11\1\0\1\12\1\0\1\12\1\4\1\13\12\4"+
    "\2\0\1\13\1\4\2\13\23\4\1\13\3\4\1\13"+
    "\10\4\1\13\40\4\1\13\1\4\1\13\17\4\1\13"+
    "\21\4\1\10\1\14\1\11\1\10\1\0\1\10\3\0"+
    "\1\12\13\4\1\13\10\4\1\15\1\16\1\0\1\4"+
    "\1\13\4\4\1\13\12\4\1\13\6\4\1\13\10\4"+
    "\1\13\73\4\1\13\1\4\1\13\11\4\1\13\12\4"+
    "\1\13\4\4\1\13\7\4\1\14\1\10\1\12\1\17"+
    "\3\0\1\11\1\5\1\7\12\4\1\0\1\15\1\4"+
    "\1\13\2\4\1\13\1\0\24\4\1\13\7\4\1\13"+
    "\3\4\1\13\6\4\1\13\12\4\1\13\24\4\1\13"+
    "\35\4\2\13\1\4\1\10\1\11\1\10\1\12\1\0"+
    "\1\17\14\4\1\0\21\4\1\13\35\4\1\13\25\4"+
    "\1\13\1\10\1\12\4\4\1\0\1\13\46\4\1\0"+
    "\12\4\1\13\4\4\1\13\5\4\1\13\5\4\2\13"+
    "\10\4\1\13\33\4\1\13\23\4";

  private static int [] zzUnpackAction() {
    int [] result = new int[689];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\71\0\162\0\253\0\71\0\344\0\u011d\0\u0156"+
    "\0\u018f\0\u01c8\0\u0201\0\u023a\0\u0273\0\u02ac\0\u02e5\0\u031e"+
    "\0\u0357\0\u01c8\0\u0357\0\u0390\0\u03c9\0\u0402\0\u043b\0\u0474"+
    "\0\u04ad\0\u04e6\0\u051f\0\u0558\0\u0591\0\u05ca\0\u0603\0\u063c"+
    "\0\u0675\0\u06ae\0\u06e7\0\u0720\0\u0759\0\u0792\0\u07cb\0\u0804"+
    "\0\u083d\0\u0876\0\u08af\0\u08e8\0\u0201\0\u0921\0\u095a\0\u0993"+
    "\0\u09cc\0\u0a05\0\u0a3e\0\u0a77\0\u0ab0\0\u0ae9\0\71\0\u0b22"+
    "\0\u0b5b\0\u0b94\0\u0bcd\0\u0c06\0\u0c3f\0\u0c78\0\u0cb1\0\u0cea"+
    "\0\u0d23\0\u0d5c\0\u0d95\0\u0dce\0\u0e07\0\u0e40\0\u0e79\0\u0eb2"+
    "\0\u0eeb\0\u0f24\0\u0f5d\0\u0f96\0\u0fcf\0\u1008\0\u1041\0\u107a"+
    "\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0\0\u1209\0\u1242"+
    "\0\u127b\0\u12b4\0\u12ed\0\u1326\0\u031e\0\u135f\0\u1398\0\u13d1"+
    "\0\u140a\0\u1443\0\u147c\0\u14b5\0\u14ee\0\u1527\0\u1560\0\u1599"+
    "\0\u15d2\0\u160b\0\u1644\0\u167d\0\u16b6\0\u16ef\0\u1728\0\u1761"+
    "\0\u179a\0\u17d3\0\u180c\0\u1845\0\u187e\0\u18b7\0\u18f0\0\u1929"+
    "\0\u1962\0\u199b\0\u19d4\0\u1a0d\0\u1a46\0\u1a7f\0\u1ab8\0\u1af1"+
    "\0\u1b2a\0\u1b63\0\u1b9c\0\u1bd5\0\u1c0e\0\u1c47\0\u1c80\0\u1cb9"+
    "\0\u1cf2\0\u1d2b\0\u1d64\0\u1d9d\0\u1dd6\0\u1e0f\0\u1e48\0\u1e81"+
    "\0\u1eba\0\u1ef3\0\u1f2c\0\u1f65\0\u1f9e\0\u1fd7\0\u2010\0\u2049"+
    "\0\u2082\0\u20bb\0\u20f4\0\u212d\0\u2166\0\u219f\0\u21d8\0\u2211"+
    "\0\u224a\0\u2283\0\u22bc\0\u22f5\0\u232e\0\u2367\0\u23a0\0\u23d9"+
    "\0\u2412\0\u244b\0\u2484\0\u24bd\0\u24f6\0\u252f\0\71\0\u2568"+
    "\0\u25a1\0\u25da\0\u2613\0\u264c\0\u2685\0\u26be\0\u26f7\0\u2730"+
    "\0\u2769\0\u27a2\0\u27db\0\u2814\0\u284d\0\u2886\0\u28bf\0\u28f8"+
    "\0\u2931\0\u296a\0\u29a3\0\u29dc\0\u2a15\0\u2a4e\0\u2a87\0\u2ac0"+
    "\0\u2af9\0\u2b32\0\u2b6b\0\u2ba4\0\u2bdd\0\71\0\u2c16\0\u2c4f"+
    "\0\u2c88\0\u2cc1\0\u2cfa\0\u2d33\0\u2d6c\0\u2da5\0\u2dde\0\u2e17"+
    "\0\u2e50\0\u2e89\0\u2ec2\0\u2efb\0\u2f34\0\u2f6d\0\u2fa6\0\u2fdf"+
    "\0\u3018\0\u3051\0\u308a\0\u30c3\0\u30fc\0\u3135\0\u316e\0\u31a7"+
    "\0\u31e0\0\u3219\0\u160b\0\u3252\0\u328b\0\u32c4\0\u32fd\0\u3336"+
    "\0\u336f\0\u33a8\0\u33e1\0\u341a\0\u3453\0\u348c\0\u34c5\0\u34fe"+
    "\0\u3537\0\u3570\0\u35a9\0\u35e2\0\u361b\0\u3654\0\u368d\0\u36c6"+
    "\0\u36ff\0\u3738\0\u3771\0\u37aa\0\u37e3\0\u381c\0\u3855\0\u388e"+
    "\0\u38c7\0\u3900\0\u3939\0\u3972\0\u39ab\0\u39e4\0\u3a1d\0\u3a56"+
    "\0\u3a8f\0\u3ac8\0\u3b01\0\u3b3a\0\u3b73\0\u3bac\0\u3be5\0\u3c1e"+
    "\0\u3c57\0\u3c90\0\u3cc9\0\u3d02\0\u3d3b\0\u3d74\0\u3dad\0\u3de6"+
    "\0\u3e1f\0\u3e58\0\u3e91\0\u29dc\0\u3eca\0\u3f03\0\u3f3c\0\u3f75"+
    "\0\u3fae\0\u3fe7\0\u4020\0\u4059\0\u4092\0\u40cb\0\u4104\0\u413d"+
    "\0\u4176\0\u41af\0\u41e8\0\u4221\0\u425a\0\u4293\0\u42cc\0\u4305"+
    "\0\u433e\0\u4377\0\u43b0\0\u43e9\0\u4422\0\u445b\0\u4494\0\u44cd"+
    "\0\u4506\0\u453f\0\u4578\0\u45b1\0\u45ea\0\u4623\0\u465c\0\u4695"+
    "\0\u46ce\0\u4707\0\u4740\0\u4779\0\u47b2\0\u47eb\0\u4824\0\u485d"+
    "\0\71\0\u4896\0\u48cf\0\u4908\0\u264c\0\u4941\0\u497a\0\u497a"+
    "\0\71\0\u49b3\0\u49ec\0\u4a25\0\u4a5e\0\u4a97\0\u4ad0\0\u4b09"+
    "\0\u4b42\0\u4b7b\0\u4bb4\0\u4bed\0\u2bdd\0\71\0\u4c26\0\u4c5f"+
    "\0\u4c98\0\u4cd1\0\u4d0a\0\u4d43\0\u4d7c\0\u4db5\0\u4dee\0\u4e27"+
    "\0\u4e60\0\u4e99\0\u4ed2\0\u4f0b\0\u4f44\0\u4f7d\0\u4fb6\0\u4fef"+
    "\0\u5028\0\u5061\0\u509a\0\u50d3\0\u510c\0\u5145\0\u517e\0\u51b7"+
    "\0\u51f0\0\u5229\0\u5262\0\u529b\0\u52d4\0\u530d\0\u5346\0\u537f"+
    "\0\u53b8\0\u53f1\0\u542a\0\u5463\0\u549c\0\u54d5\0\u550e\0\u5547"+
    "\0\u5580\0\u55b9\0\u55f2\0\u562b\0\u5664\0\u569d\0\u56d6\0\u570f"+
    "\0\u5748\0\u5781\0\u57ba\0\u57f3\0\u582c\0\u5865\0\u589e\0\u58d7"+
    "\0\u5910\0\u5949\0\u5982\0\u59bb\0\u59f4\0\u5a2d\0\u5a66\0\u5a9f"+
    "\0\u5ad8\0\u5b11\0\u5b4a\0\u5b83\0\u5bbc\0\u5bf5\0\u46ce\0\u5c2e"+
    "\0\u5c67\0\u5ca0\0\u5cd9\0\u5d12\0\u5d4b\0\u5d84\0\u5dbd\0\u5df6"+
    "\0\u5e2f\0\u5e68\0\u5ea1\0\u5eda\0\u5f13\0\u5f4c\0\u5f85\0\u5fbe"+
    "\0\u5ff7\0\u6030\0\u6069\0\u60a2\0\u60db\0\u6114\0\u614d\0\u6186"+
    "\0\u61bf\0\u61f8\0\u6231\0\u626a\0\u62a3\0\u62dc\0\u6315\0\u634e"+
    "\0\u6387\0\u63c0\0\u252f\0\u63f9\0\u6432\0\u6432\0\u646b\0\u0921"+
    "\0\u4908\0\71\0\u64a4\0\u64dd\0\u6516\0\u654f\0\u6588\0\u65c1"+
    "\0\u65fa\0\u6633\0\u666c\0\u66a5\0\u4092\0\u66de\0\u6717\0\u6750"+
    "\0\u6789\0\u67c2\0\u67fb\0\u6834\0\u686d\0\u68a6\0\u31a7\0\u68df"+
    "\0\u6918\0\u6951\0\u698a\0\u69c3\0\u69fc\0\u6a35\0\u6a6e\0\u6aa7"+
    "\0\u6ae0\0\u6b19\0\u6b52\0\u6b8b\0\u6bc4\0\u6bfd\0\u6c36\0\u6c6f"+
    "\0\u6ca8\0\u6ce1\0\u6d1a\0\u6d53\0\u6d8c\0\u6dc5\0\u6dfe\0\u6e37"+
    "\0\u6e70\0\u6ea9\0\u6ee2\0\u6f1b\0\u6f54\0\u6f8d\0\u6fc6\0\u6fff"+
    "\0\u7038\0\u7071\0\u70aa\0\u70e3\0\u711c\0\u7155\0\u718e\0\u71c7"+
    "\0\u7200\0\u7239\0\u7272\0\u72ab\0\u72e4\0\u731d\0\u7356\0\u738f"+
    "\0\u73c8\0\u7401\0\u743a\0\u7473\0\u74ac\0\u74e5\0\u751e\0\u7557"+
    "\0\u7590\0\u75c9\0\u7602\0\u763b\0\u4b09\0\u7674\0\u76ad\0\u76e6"+
    "\0\u771f\0\u7758\0\u7791\0\u77ca\0\u2cfa\0\u7803\0\u783c\0\u7875"+
    "\0\u78ae\0\u78e7\0\u7920\0\u7959\0\u7992\0\u79cb\0\u7a04\0\u7a3d"+
    "\0\u7a76\0\u7aaf\0\u7ae8\0\u7b21\0\u7b5a\0\u7b93\0\u7bcc\0\u7c05"+
    "\0\u7c3e\0\u7c77\0\u7cb0\0\u7ce9\0\u7d22\0\u7d5b\0\u7d94\0\u7dcd"+
    "\0\u7e06\0\u7e3f\0\u7e78\0\u7eb1\0\u7eea\0\u7f23\0\u7f5c\0\u7f95"+
    "\0\u7fce\0\u8007\0\u8040\0\u8079\0\u80b2\0\u80eb\0\u8124\0\u815d"+
    "\0\u8196\0\u81cf\0\u8208\0\u8241\0\u827a\0\u82b3\0\u82ec\0\u8325"+
    "\0\u835e\0\u8397\0\u83d0\0\u2a87\0\u8409\0\u8442\0\u0e40\0\u847b"+
    "\0\u84b4\0\u7f95\0\u84ed\0\u8526\0\u433e\0\u855f\0\u8598\0\71"+
    "\0\u85d1\0\u860a\0\u8643\0\u867c\0\u86b5\0\u86ee\0\u8727\0\u8760"+
    "\0\u8799\0\u87d2\0\u880b\0\u8844\0\u887d\0\u88b6\0\u88ef\0\u8928"+
    "\0\u8961\0\u899a\0\u89d3\0\u8a0c\0\u8a45\0\u8a7e\0\u8ab7\0\u8af0"+
    "\0\u8b29\0\u8b62\0\u8b9b\0\u8bd4\0\u8c0d\0\u8c46\0\u8c7f\0\u8cb8"+
    "\0\u8cf1\0\u8d2a\0\u8d63\0\u8d9c\0\u8dd5\0\u8e0e\0\u8e47\0\u8e80"+
    "\0\u8eb9\0\u8ef2\0\u8f2b\0\u8f64\0\u8f9d\0\u8fd6\0\u900f\0\u9048"+
    "\0\u9081\0\u85d1\0\u90ba\0\u90f3\0\u912c\0\u9165\0\u919e\0\u91d7"+
    "\0\u9210";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[689];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\5\3\7\1\10"+
    "\1\11\1\12\1\13\1\14\1\5\1\15\1\5\1\16"+
    "\1\5\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\22\1\27\1\22\1\0\2\20\1\30\1\31"+
    "\1\32\1\33\1\34\1\20\1\35\1\36\1\37\1\40"+
    "\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\20\1\54\1\20\105\0\1\55"+
    "\54\0\2\56\1\57\11\56\1\60\10\56\1\61\1\56"+
    "\1\61\41\56\3\0\1\62\74\0\1\5\72\0\1\5"+
    "\71\0\1\5\71\0\1\22\12\0\1\22\4\0\1\22"+
    "\1\0\1\22\60\0\1\63\1\0\1\63\57\0\1\5"+
    "\54\0\1\64\15\0\1\5\72\0\1\5\71\0\1\5"+
    "\71\0\2\20\1\0\4\20\4\0\32\20\14\0\1\65"+
    "\10\0\1\21\1\0\1\21\7\0\1\66\1\67\1\0"+
    "\1\66\1\67\1\0\1\67\47\0\2\20\1\0\2\20"+
    "\1\70\1\20\4\0\2\20\1\71\1\72\1\20\1\73"+
    "\5\20\1\74\16\20\24\0\2\20\1\0\1\20\1\75"+
    "\2\20\4\0\12\20\1\76\4\20\1\77\12\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\100\1\101\1\20"+
    "\1\102\10\20\1\103\13\20\34\104\1\105\34\104\24\0"+
    "\2\20\1\0\1\20\1\106\1\107\1\20\4\0\4\20"+
    "\1\110\4\20\1\111\1\112\1\113\12\20\1\114\3\20"+
    "\24\0\2\20\1\0\1\20\1\115\1\20\1\116\4\0"+
    "\7\20\1\117\1\20\1\120\5\20\1\121\12\20\24\0"+
    "\2\20\1\0\2\20\1\122\1\123\4\0\2\20\1\124"+
    "\1\125\1\20\1\126\3\20\1\127\4\20\1\130\13\20"+
    "\24\0\2\20\1\0\1\20\1\131\1\132\1\133\4\0"+
    "\6\20\1\134\1\20\1\135\1\136\1\20\1\137\1\20"+
    "\1\140\1\20\1\141\6\20\1\142\3\20\24\0\2\20"+
    "\1\0\2\20\1\143\1\20\4\0\2\20\1\144\1\145"+
    "\1\20\1\146\3\20\1\147\3\20\1\150\1\151\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\2\20\1\152\1\153"+
    "\1\20\1\154\3\20\1\155\2\20\1\156\1\20\1\157"+
    "\1\160\12\20\24\0\2\20\1\0\2\20\1\161\1\20"+
    "\4\0\2\20\1\162\1\163\1\20\1\164\10\20\1\165"+
    "\13\20\24\0\2\20\1\0\2\20\1\166\1\167\4\0"+
    "\2\20\1\170\1\171\1\20\1\172\3\20\1\173\4\20"+
    "\1\174\13\20\24\0\2\20\1\0\2\20\1\175\1\176"+
    "\4\0\2\20\1\177\2\20\1\200\3\20\1\201\2\20"+
    "\1\202\15\20\24\0\2\20\1\0\4\20\4\0\2\20"+
    "\1\203\2\20\1\204\24\20\24\0\2\20\1\0\2\20"+
    "\1\205\1\20\4\0\2\20\1\206\1\207\1\20\1\210"+
    "\3\20\1\211\4\20\1\212\1\20\1\135\11\20\24\0"+
    "\2\20\1\0\1\20\1\213\2\20\4\0\4\20\1\135"+
    "\1\20\1\214\10\20\1\215\4\20\1\216\5\20\24\0"+
    "\2\20\1\0\2\20\1\217\1\20\4\0\2\20\1\220"+
    "\1\221\1\20\1\222\2\20\1\223\1\20\1\224\1\225"+
    "\1\226\1\20\1\227\1\20\1\230\3\20\1\231\4\20"+
    "\1\232\24\0\2\20\1\0\4\20\4\0\3\20\1\233"+
    "\26\20\24\0\2\20\1\0\3\20\1\234\4\0\2\20"+
    "\1\235\1\236\5\20\1\237\20\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\240\27\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\241\12\20\1\242\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\243\1\244\1\20"+
    "\1\245\10\20\1\246\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\247\2\20\1\250\3\20\1\251\2\20"+
    "\1\252\1\20\1\253\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\254\10\20\1\255\13\20\24\0\2\20"+
    "\1\0\4\20\4\0\2\20\1\256\27\20\33\56\1\0"+
    "\1\56\1\257\33\56\71\260\25\56\1\261\1\56\1\261"+
    "\3\56\1\0\1\56\1\257\47\56\1\262\10\56\1\61"+
    "\1\56\1\61\3\56\1\0\1\56\1\257\33\56\3\62"+
    "\1\263\2\62\1\264\32\62\3\264\25\62\25\0\1\63"+
    "\1\0\1\63\7\0\1\265\2\0\1\265\53\0\1\266"+
    "\1\0\1\266\66\0\1\65\1\0\1\65\7\0\1\66"+
    "\1\67\1\0\1\66\1\67\1\0\1\67\24\0\2\267"+
    "\22\0\1\270\1\0\1\270\65\0\2\20\1\0\3\20"+
    "\1\271\4\0\24\20\1\272\5\20\24\0\2\20\1\0"+
    "\1\20\1\273\2\20\4\0\10\20\1\135\2\20\1\274"+
    "\16\20\24\0\2\20\1\0\4\20\4\0\7\20\1\236"+
    "\22\20\24\0\2\20\1\0\4\20\4\0\10\20\1\275"+
    "\13\20\1\276\5\20\24\0\2\20\1\0\4\20\4\0"+
    "\14\20\1\233\15\20\24\0\2\20\1\0\4\20\4\0"+
    "\12\20\1\277\3\20\1\300\4\20\1\301\6\20\24\0"+
    "\2\20\1\0\4\20\4\0\6\20\1\302\3\20\1\303"+
    "\17\20\24\0\2\20\1\0\4\20\4\0\3\20\1\304"+
    "\1\20\1\305\10\20\1\306\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\5\20\1\307\5\20\1\310\11\20\1\303"+
    "\4\20\24\0\2\20\1\0\4\20\4\0\4\20\1\236"+
    "\1\311\20\20\1\312\3\20\24\0\2\20\1\0\1\20"+
    "\1\313\2\20\4\0\17\20\1\236\12\20\24\0\2\20"+
    "\1\0\1\20\1\314\2\20\4\0\23\20\1\136\6\20"+
    "\33\315\1\104\1\316\2\104\32\315\34\317\1\105\34\317"+
    "\24\0\2\20\1\0\3\20\1\241\4\0\32\20\24\0"+
    "\2\20\1\0\4\20\4\0\10\20\1\320\21\20\24\0"+
    "\2\20\1\0\4\20\4\0\4\20\1\321\25\20\24\0"+
    "\2\20\1\0\4\20\4\0\6\20\1\303\23\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\322\4\20\1\323"+
    "\21\20\24\0\2\20\1\0\4\20\4\0\10\20\1\324"+
    "\21\20\24\0\2\20\1\0\4\20\4\0\3\20\1\325"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\6\20\1\326"+
    "\23\20\24\0\2\20\1\0\4\20\4\0\17\20\1\136"+
    "\12\20\24\0\2\20\1\0\4\20\4\0\3\20\1\327"+
    "\4\20\1\330\2\20\1\331\2\20\1\332\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\11\20\1\333\20\20\24\0"+
    "\2\20\1\0\4\20\4\0\13\20\1\334\16\20\24\0"+
    "\2\20\1\0\1\20\1\335\1\20\1\336\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\2\20\1\337\27\20"+
    "\24\0\2\20\1\0\2\20\1\340\1\20\4\0\11\20"+
    "\1\341\20\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\342\21\20\24\0\2\20\1\0\3\20\1\116\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\2\20\1\343"+
    "\1\344\26\20\24\0\2\20\1\0\3\20\1\345\4\0"+
    "\11\20\1\346\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\6\20\1\135\11\20\1\135\11\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\347\21\20\24\0\2\20\1\0"+
    "\3\20\1\350\4\0\10\20\1\303\21\20\24\0\2\20"+
    "\1\0\4\20\4\0\5\20\2\135\23\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\135\26\20\24\0\2\20"+
    "\1\0\4\20\4\0\10\20\1\323\21\20\24\0\2\20"+
    "\1\0\4\20\4\0\17\20\1\351\12\20\24\0\2\20"+
    "\1\0\4\20\4\0\13\20\1\135\3\20\1\352\12\20"+
    "\24\0\2\20\1\0\4\20\4\0\21\20\1\135\10\20"+
    "\24\0\2\20\1\0\4\20\4\0\24\20\1\353\5\20"+
    "\24\0\2\20\1\0\2\20\1\354\1\20\4\0\24\20"+
    "\1\355\5\20\24\0\2\20\1\0\1\20\1\241\1\20"+
    "\1\356\4\0\4\20\1\357\1\360\5\20\1\361\3\20"+
    "\1\362\12\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\363\7\20\1\135\11\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\353\27\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\364\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\365\11\20\1\366\12\20\24\0\2\20"+
    "\1\0\4\20\4\0\12\20\1\135\17\20\24\0\2\20"+
    "\1\0\4\20\4\0\7\20\1\367\14\20\1\370\5\20"+
    "\24\0\2\20\1\0\4\20\4\0\15\20\1\371\14\20"+
    "\24\0\2\20\1\0\2\20\1\372\1\20\4\0\5\20"+
    "\1\373\10\20\1\374\1\20\1\375\11\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\376\26\20\24\0\2\20"+
    "\1\0\4\20\4\0\24\20\1\377\5\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\u0100\26\20\24\0\2\20"+
    "\1\0\3\20\1\136\4\0\32\20\24\0\2\20\1\0"+
    "\3\20\1\u0101\4\0\25\20\1\u0102\4\20\24\0\2\20"+
    "\1\0\3\20\1\u0103\4\0\4\20\1\u0104\1\u0105\2\20"+
    "\1\u0106\1\20\1\u0107\1\u0108\3\20\1\u0109\6\20\1\u010a"+
    "\3\20\24\0\2\20\1\0\4\20\4\0\16\20\1\u010b"+
    "\13\20\24\0\2\20\1\0\4\20\4\0\21\20\1\u010c"+
    "\10\20\24\0\2\20\1\0\4\20\4\0\15\20\1\u010d"+
    "\14\20\24\0\2\20\1\0\4\20\4\0\5\20\1\376"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u010e"+
    "\12\20\24\0\2\20\1\0\4\20\4\0\11\20\1\u010f"+
    "\20\20\24\0\2\20\1\0\4\20\4\0\6\20\1\135"+
    "\2\20\1\u0110\5\20\1\u0111\12\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\u0112\1\u0113\12\20\1\u0114\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\26\20\1\u0115\3\20"+
    "\24\0\2\20\1\0\4\20\4\0\11\20\1\u0116\20\20"+
    "\24\0\2\20\1\0\2\20\1\u0117\1\20\4\0\2\20"+
    "\1\116\27\20\24\0\2\20\1\0\1\20\1\u0118\1\u0119"+
    "\1\u011a\4\0\5\20\1\u011b\3\20\1\u011c\12\20\1\u011d"+
    "\5\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u011e"+
    "\6\20\1\u011f\12\20\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\u0120\1\u0121\26\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u0122\1\20\1\u0123\24\20\24\0\2\20"+
    "\1\0\2\20\1\u0124\1\u0125\4\0\32\20\24\0\2\20"+
    "\1\0\4\20\4\0\26\20\1\u0126\3\20\24\0\2\20"+
    "\1\0\3\20\1\u0127\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u0128\21\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u0129\10\20\1\256\10\20\24\0"+
    "\2\20\1\0\4\20\4\0\13\20\1\u012a\16\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\u012b\1\u012c\26\20"+
    "\24\0\2\20\1\0\4\20\4\0\10\20\1\u012d\21\20"+
    "\24\0\2\20\1\0\1\20\1\303\2\20\4\0\6\20"+
    "\1\u012e\1\20\1\u012f\1\20\1\u0130\1\u0131\2\20\1\u0132"+
    "\1\u0133\12\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u0134\26\20\24\0\2\20\1\0\4\20\4\0\2\20"+
    "\1\u0135\27\20\24\0\2\20\1\0\4\20\4\0\24\20"+
    "\1\u0136\5\20\24\0\2\20\1\0\4\20\4\0\15\20"+
    "\1\u0137\6\20\1\135\5\20\24\0\2\20\1\0\4\20"+
    "\4\0\24\20\1\136\5\20\24\0\2\20\1\0\3\20"+
    "\1\u0138\4\0\10\20\1\u0139\2\20\1\u013a\3\20\1\u013b"+
    "\4\20\1\u013c\5\20\24\0\2\20\1\0\4\20\4\0"+
    "\26\20\1\136\3\20\24\0\2\20\1\0\4\20\4\0"+
    "\5\20\1\u013d\24\20\24\0\2\20\1\0\4\20\4\0"+
    "\5\20\1\u013e\24\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\u013f\2\20\1\u0140\15\20\24\0\2\20\1\0"+
    "\2\20\1\u0141\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\22\20\1\136\7\20\24\0\2\20\1\0"+
    "\4\20\4\0\17\20\1\u0142\12\20\24\0\2\20\1\0"+
    "\4\20\4\0\5\20\1\u0143\24\20\24\0\2\20\1\0"+
    "\3\20\1\u0144\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\u0124\24\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u0145\27\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u0146\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\135\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u0147\2\20\1\u0119\24\20\24\0\2\20"+
    "\1\0\1\20\1\136\2\20\4\0\32\20\24\0\2\20"+
    "\1\0\4\20\4\0\20\20\1\135\11\20\24\0\2\20"+
    "\1\0\3\20\1\336\4\0\32\20\24\0\2\20\1\0"+
    "\1\20\1\206\2\20\4\0\6\20\1\u0148\23\20\24\0"+
    "\2\20\1\0\4\20\4\0\11\20\1\305\20\20\24\0"+
    "\2\20\1\0\4\20\4\0\7\20\1\135\1\342\21\20"+
    "\24\0\2\20\1\0\1\20\1\u0149\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\11\20\1\u0127\20\20"+
    "\24\0\2\20\1\0\4\20\4\0\16\20\1\u014a\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\16\20\1\u014b\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\3\20\1\u014c\12\20"+
    "\1\161\13\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\u014d\21\20\24\0\2\20\1\0\3\20\1\u014e\4\0"+
    "\11\20\1\u014f\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\u0150\26\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\376\13\20\33\260\1\0\1\260\1\u0151\33\260"+
    "\25\56\1\261\1\56\1\261\3\56\1\0\1\56\1\257"+
    "\1\56\1\u0152\2\56\1\u0152\53\56\1\u0153\1\56\1\u0153"+
    "\3\56\1\0\1\56\1\257\33\56\3\62\1\263\1\u0154"+
    "\1\62\1\264\32\62\3\264\25\62\3\u0155\1\u0156\65\u0155"+
    "\1\0\2\u0157\22\0\1\u0158\1\0\1\u0158\61\0\1\u0159"+
    "\4\0\1\266\1\0\1\266\66\0\1\270\1\0\1\270"+
    "\66\0\1\270\1\0\1\270\10\0\1\67\2\0\1\67"+
    "\1\0\1\67\47\0\2\20\1\0\3\20\1\u015a\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\3\20\1\u015b"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\3\20\1\135"+
    "\7\20\1\u015c\16\20\24\0\2\20\1\0\4\20\4\0"+
    "\14\20\1\u015d\15\20\24\0\2\20\1\0\2\20\1\u015e"+
    "\1\20\4\0\16\20\1\u015f\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u0160\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\174\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\376\26\20\1\u0161\24\0\2\20"+
    "\1\0\1\20\1\u0162\2\20\4\0\32\20\24\0\2\20"+
    "\1\0\4\20\4\0\5\20\1\u014b\24\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\u0124\26\20\24\0\2\20"+
    "\1\0\4\20\4\0\11\20\1\135\20\20\24\0\2\20"+
    "\1\0\4\20\4\0\21\20\1\136\10\20\24\0\2\20"+
    "\1\0\1\20\1\142\2\20\4\0\32\20\24\0\2\20"+
    "\1\0\4\20\4\0\6\20\1\135\23\20\24\0\2\20"+
    "\1\0\4\20\4\0\5\20\1\336\24\20\24\0\2\20"+
    "\1\0\4\20\4\0\6\20\1\u0126\23\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\336\26\20\24\0\2\20"+
    "\1\0\4\20\4\0\21\20\1\u0163\10\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\u0164\26\20\34\u0165\1\316"+
    "\34\u0165\33\u0166\1\317\1\u0166\2\317\32\u0166\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\u0124\6\20\1\u0130\17\20"+
    "\24\0\2\20\1\0\4\20\4\0\17\20\1\u0167\12\20"+
    "\24\0\2\20\1\0\1\20\1\u0168\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\16\20\1\u0169\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\3\20\1\u016a\26\20"+
    "\24\0\2\20\1\0\4\20\4\0\11\20\1\u016b\20\20"+
    "\2\0\1\u016c\21\0\2\20\1\0\4\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\13\20\1\u0149\16\20"+
    "\24\0\2\20\1\0\4\20\4\0\3\20\1\u016d\5\20"+
    "\1\u016e\20\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u016f\26\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\135\6\20\1\u0170\12\20\24\0\2\20\1\0\3\20"+
    "\1\u0171\4\0\32\20\24\0\2\20\1\0\4\20\4\0"+
    "\5\20\1\u0172\24\20\24\0\2\20\1\0\4\20\4\0"+
    "\13\20\1\137\16\20\24\0\2\20\1\0\3\20\1\135"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\5\20"+
    "\1\236\24\20\24\0\2\20\1\0\1\20\1\307\2\20"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u0173\4\20\1\u0174\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\u0128\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\24\20\1\135\5\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u0175\26\20\24\0\2\20\1\0\3\20"+
    "\1\u0176\4\0\3\20\1\135\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\17\20\1\236\12\20\24\0\2\20\1\0"+
    "\4\20\4\0\14\20\1\u0177\15\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\u0178\27\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\u0179\27\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u017a\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\15\20\1\161\14\20\24\0\2\20\1\0"+
    "\4\20\4\0\5\20\1\256\24\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u017b\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u017c\1\20\1\u017d\24\20\24\0"+
    "\2\20\1\0\3\20\1\u017e\4\0\32\20\24\0\2\20"+
    "\1\0\3\20\1\u017f\4\0\16\20\1\u0180\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\13\20\1\u0181\16\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\135\1\20\1\u0182"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\13\20\1\135"+
    "\16\20\24\0\2\20\1\0\4\20\4\0\21\20\1\u0183"+
    "\10\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u0184"+
    "\2\20\1\u0185\7\20\1\135\6\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u0186\21\20\24\0\2\20\1\0"+
    "\4\20\4\0\12\20\1\u0187\17\20\24\0\2\20\1\0"+
    "\3\20\1\u0188\4\0\32\20\24\0\2\20\1\0\1\20"+
    "\1\u0178\2\20\4\0\3\20\1\135\26\20\24\0\2\20"+
    "\1\0\1\20\1\u0189\2\20\4\0\16\20\1\u018a\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\21\20\1\u018b\2\20"+
    "\1\135\5\20\24\0\2\20\1\0\4\20\4\0\27\20"+
    "\1\u018c\2\20\24\0\2\20\1\0\1\20\1\135\2\20"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u018d\26\20\24\0\2\20\1\0\4\20\4\0\31\20"+
    "\1\u018e\24\0\2\20\1\0\3\20\1\u018f\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\13\20\1\u0190\3\20"+
    "\1\135\1\20\1\u0191\10\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\u0192\24\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u0193\26\20\24\0\2\20\1\0\3\20"+
    "\1\135\4\0\6\20\1\u0194\23\20\24\0\2\20\1\0"+
    "\2\20\1\u0195\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\3\20\1\u0196\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u0197\27\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u0198\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u0199\1\u019a\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\17\20\1\u019b\12\20\24\0\2\20\1\0"+
    "\4\20\4\0\14\20\1\236\15\20\24\0\2\20\1\0"+
    "\3\20\1\u019c\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\16\20\1\137\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\u019d\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u019e\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\310\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\u019f\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\12\20\1\u017f\1\u01a0\3\20\1\u01a1\12\20\24\0"+
    "\2\20\1\0\1\20\1\236\2\20\4\0\2\20\1\u0124"+
    "\21\20\1\u01a2\1\20\1\u01a3\3\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\236\27\20\24\0\2\20\1\0"+
    "\4\20\4\0\11\20\1\u01a4\5\20\1\u01a5\12\20\24\0"+
    "\2\20\1\0\4\20\4\0\17\20\1\u01a6\12\20\24\0"+
    "\2\20\1\0\1\20\1\u01a7\2\20\4\0\10\20\1\u01a8"+
    "\6\20\1\u01a9\6\20\1\u01aa\3\20\24\0\2\20\1\0"+
    "\1\20\1\236\2\20\4\0\32\20\24\0\2\20\1\0"+
    "\2\20\1\u01ab\1\u01ac\4\0\32\20\24\0\2\20\1\0"+
    "\3\20\1\u01ad\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\11\20\1\u01ae\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\12\20\1\u01af\11\20\1\u01b0\5\20\24\0\2\20"+
    "\1\0\4\20\4\0\5\20\1\u01b1\24\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\135\4\20\1\135\2\20"+
    "\1\u01b2\16\20\24\0\2\20\1\0\4\20\4\0\17\20"+
    "\1\u0160\12\20\24\0\2\20\1\0\4\20\4\0\5\20"+
    "\1\u017b\24\20\24\0\2\20\1\0\4\20\4\0\13\20"+
    "\1\u01b3\16\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\u01b4\20\20\24\0\2\20\1\0\4\20\4\0\6\20"+
    "\1\u01b5\23\20\24\0\2\20\1\0\4\20\4\0\16\20"+
    "\1\306\13\20\24\0\2\20\1\0\4\20\4\0\23\20"+
    "\1\135\6\20\24\0\2\20\1\0\4\20\4\0\14\20"+
    "\1\135\15\20\24\0\2\20\1\0\4\20\4\0\25\20"+
    "\1\u01b6\4\20\24\0\2\20\1\0\4\20\4\0\23\20"+
    "\1\u0147\6\20\24\0\2\20\1\0\4\20\4\0\25\20"+
    "\1\116\4\20\24\0\2\20\1\0\4\20\4\0\5\20"+
    "\1\u0127\24\20\24\0\2\20\1\0\4\20\4\0\27\20"+
    "\1\u01b7\2\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u01b8\12\20\1\u01b9\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\135\1\u01ba\26\20\24\0\2\20\1\0"+
    "\2\20\1\236\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\3\20\1\u01bb\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u01bc\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u01bd\26\20\24\0\2\20\1\0\1\20"+
    "\1\u01be\2\20\4\0\32\20\24\0\2\20\1\0\3\20"+
    "\1\u01bf\4\0\32\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\u01c0\26\20\24\0\2\20\1\0\4\20\4\0"+
    "\17\20\1\u01c1\12\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\u01c2\26\20\24\0\2\20\1\0\2\20\1\u01c3"+
    "\1\20\4\0\32\20\24\0\2\20\1\0\2\20\1\u01c4"+
    "\1\20\4\0\2\20\1\340\5\20\1\323\21\20\24\0"+
    "\2\20\1\0\4\20\4\0\17\20\1\u01c5\12\20\24\0"+
    "\2\20\1\0\4\20\4\0\5\20\1\u01c6\24\20\24\0"+
    "\2\20\1\0\4\20\4\0\10\20\1\u01c7\21\20\24\0"+
    "\2\20\1\0\4\20\4\0\13\20\1\136\16\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\242\27\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u01c8\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\10\20\1\u01c9\21\20\24\0"+
    "\2\20\1\0\4\20\4\0\10\20\1\u01ca\21\20\24\0"+
    "\2\20\1\0\3\20\1\u01cb\4\0\32\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\u01cc\7\20\1\u01cd\3\20"+
    "\1\u01ce\5\20\1\u01cf\4\20\24\0\2\20\1\0\4\20"+
    "\4\0\15\20\1\310\14\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\135\27\20\24\0\2\20\1\0\2\20"+
    "\1\353\1\20\4\0\32\20\24\0\2\20\1\0\2\20"+
    "\1\161\1\20\4\0\32\20\24\0\2\20\1\0\2\20"+
    "\1\u017b\1\20\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u01d0\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u01d1\21\20\24\0\2\20\1\0\1\20"+
    "\1\u01d2\2\20\4\0\11\20\1\136\20\20\24\0\2\20"+
    "\1\0\4\20\4\0\14\20\1\u01d3\15\20\24\0\2\20"+
    "\1\0\2\20\1\u01d4\1\20\4\0\32\20\24\0\2\20"+
    "\1\0\4\20\4\0\13\20\1\74\4\20\1\u0126\11\20"+
    "\24\0\2\20\1\0\4\20\4\0\25\20\1\135\4\20"+
    "\1\56\2\u01d5\22\56\1\u01d6\1\56\1\u01d6\3\56\1\0"+
    "\1\56\1\257\60\56\1\u0153\1\56\1\u0153\3\56\1\0"+
    "\1\56\1\257\1\56\1\u01d7\1\u01d8\1\56\1\u01d7\1\u01d8"+
    "\1\56\1\u01d8\23\56\6\u01d9\1\257\32\u01d9\3\257\25\u01d9"+
    "\3\u0155\1\u0156\1\u01da\64\u0155\25\0\1\u0158\1\0\1\u0158"+
    "\65\0\2\20\1\0\4\20\4\0\16\20\1\u01db\13\20"+
    "\24\0\2\20\1\0\4\20\4\0\11\20\1\u019c\20\20"+
    "\24\0\2\20\1\0\3\20\1\u01dc\4\0\32\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u01dd\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\11\20\1\310\20\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\u01de\27\20\24\0"+
    "\2\20\1\0\4\20\4\0\17\20\1\135\12\20\24\0"+
    "\2\20\1\0\2\20\1\136\1\20\4\0\32\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\u01df\27\20\24\0"+
    "\2\20\1\0\2\20\1\u01e0\1\20\4\0\32\20\24\0"+
    "\2\20\1\0\1\20\1\u0146\2\20\4\0\32\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u0170\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\6\20\1\u01e1\1\u01e2\1\20"+
    "\1\u01e3\17\20\1\u01e4\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\376\27\20\24\0\2\20\1\0\4\20\4\0"+
    "\10\20\1\u01e5\21\20\24\0\2\20\1\0\3\20\1\u01e6"+
    "\4\0\32\20\42\0\1\u01e7\52\0\2\20\1\0\4\20"+
    "\4\0\11\20\1\u01de\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\u01c2\24\20\24\0\2\20\1\0\4\20"+
    "\4\0\12\20\1\u01e8\17\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u0160\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\26\20\1\336\3\20\24\0\2\20\1\0\4\20"+
    "\4\0\12\20\1\136\17\20\24\0\2\20\1\0\4\20"+
    "\4\0\16\20\1\u01e9\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\11\20\1\167\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u01ea\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\4\20\1\u01eb\25\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u01ec\27\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\u0121\16\20\24\0\2\20\1\0\3\20"+
    "\1\u01af\4\0\32\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\137\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\10\20\1\136\21\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\u01ed\20\20\24\0\2\20\1\0\2\20\1\u01ee"+
    "\1\20\4\0\32\20\24\0\2\20\1\0\3\20\1\u01ef"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\5\20"+
    "\1\u01f0\24\20\24\0\2\20\1\0\4\20\4\0\24\20"+
    "\1\310\5\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\u01f1\20\20\24\0\2\20\1\0\4\20\4\0\15\20"+
    "\1\u01f2\14\20\24\0\2\20\1\0\1\20\1\u01f3\2\20"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\u01f4\4\20\1\u01f5\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u01f6\27\20\24\0\2\20\1\0\4\20"+
    "\4\0\17\20\1\u01f7\12\20\24\0\2\20\1\0\4\20"+
    "\4\0\2\20\1\u01f8\27\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u01f9\26\20\24\0\2\20\1\0\4\20"+
    "\4\0\17\20\1\u01fa\12\20\24\0\2\20\1\0\3\20"+
    "\1\u0126\4\0\32\20\24\0\2\20\1\0\4\20\4\0"+
    "\21\20\1\303\10\20\24\0\2\20\1\0\4\20\4\0"+
    "\13\20\1\u01fb\16\20\24\0\2\20\1\0\4\20\4\0"+
    "\17\20\1\u01fc\2\20\1\u01fd\7\20\24\0\2\20\1\0"+
    "\2\20\1\310\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\15\20\1\u01fe\14\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\u01ff\27\20\24\0\2\20\1\0"+
    "\2\20\1\u0200\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u0201\21\20\24\0\2\20\1\0"+
    "\4\20\4\0\11\20\1\u0202\20\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u0203\21\20\24\0\2\20\1\0"+
    "\4\20\4\0\11\20\1\376\20\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\u0204\13\20\24\0\2\20\1\0"+
    "\1\20\1\u0205\2\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\u01f0\6\20\1\u0206\20\20\24\0"+
    "\2\20\1\0\4\20\4\0\23\20\1\136\6\20\24\0"+
    "\2\20\1\0\4\20\4\0\11\20\1\236\20\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u01cc\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\16\20\1\364\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u0119\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\16\20\1\310\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u0207\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\16\20\1\u0208\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u0209\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\5\20\1\u020a\24\20\24\0"+
    "\2\20\1\0\4\20\4\0\16\20\1\u020b\13\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u020c\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\2\20\1\u0124\27\20\24\0"+
    "\2\20\1\0\4\20\4\0\10\20\1\u020d\21\20\24\0"+
    "\2\20\1\0\4\20\4\0\3\20\1\u020e\26\20\24\0"+
    "\2\20\1\0\4\20\4\0\5\20\1\u020f\10\20\1\u0210"+
    "\13\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u0211"+
    "\21\20\24\0\2\20\1\0\4\20\4\0\3\20\1\u019a"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\24\20\1\376"+
    "\5\20\24\0\2\20\1\0\4\20\4\0\5\20\1\u0212"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\3\20\1\u0213"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\3\20\1\u0214"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\16\20\1\236"+
    "\13\20\24\0\2\20\1\0\3\20\1\u0215\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\u0216\24\20"+
    "\24\0\2\20\1\0\4\20\4\0\23\20\1\u0217\6\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\u0218\21\20"+
    "\1\u01b7\2\20\24\0\2\20\1\0\3\20\1\u0219\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\3\20\1\156"+
    "\26\20\24\0\2\20\1\0\3\20\1\u021a\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\7\20\1\135\22\20"+
    "\24\0\2\20\1\0\4\20\4\0\13\20\1\u021b\16\20"+
    "\24\0\2\20\1\0\4\20\4\0\11\20\1\u021c\7\20"+
    "\1\303\10\20\24\0\2\20\1\0\2\20\1\u021d\1\20"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\16\20"+
    "\1\u021e\13\20\24\0\2\20\1\0\1\20\1\u021f\2\20"+
    "\4\0\11\20\1\236\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u0220\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\137\24\20\24\0\2\20\1\0\4\20"+
    "\4\0\6\20\1\u0221\23\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u0222\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\236\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\17\20\1\303\12\20\24\0\2\20\1\0\4\20"+
    "\4\0\11\20\1\u0223\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\16\20\1\u0224\13\20\24\0\2\20\1\0\1\20"+
    "\1\u0225\2\20\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\16\20\1\u0226\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\24\20\1\u0227\5\20\24\0\2\20\1\0\4\20"+
    "\4\0\6\20\1\u0162\23\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u0228\26\20\24\0\2\20\1\0\3\20"+
    "\1\u0229\4\0\32\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\u022a\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\u021d\2\20\1\135\24\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u0121\21\20\24\0\2\20\1\0"+
    "\4\20\4\0\5\20\1\u022b\24\20\24\0\2\20\1\0"+
    "\4\20\4\0\4\20\1\u01a5\25\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u0194\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u022c\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u022d\26\20\25\56\1\u01d6\1\56"+
    "\1\u01d6\3\56\1\0\1\56\1\257\34\56\2\u022e\22\56"+
    "\1\u022f\1\56\1\u022f\3\56\1\0\1\56\1\257\33\56"+
    "\24\0\2\20\1\0\4\20\4\0\4\20\1\135\25\20"+
    "\24\0\2\20\1\0\2\20\1\u0117\1\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\13\20\1\u0127\16\20"+
    "\24\0\2\20\1\0\1\20\1\310\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\25\20\1\376\4\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\305\24\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\u0230\24\20"+
    "\24\0\2\20\1\0\4\20\4\0\24\20\1\336\5\20"+
    "\24\0\2\20\1\0\4\20\4\0\2\20\1\u0231\27\20"+
    "\24\0\2\20\1\0\2\20\1\u0232\1\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\u0233\24\20"+
    "\46\0\1\u0234\46\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\u0235\21\20\24\0\2\20\1\0\4\20\4\0\21\20"+
    "\1\376\10\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u0236\26\20\24\0\2\20\1\0\4\20\4\0\5\20"+
    "\1\u0237\24\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\u0238\20\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\u0239\20\20\24\0\2\20\1\0\3\20\1\236\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\11\20\1\136"+
    "\20\20\24\0\2\20\1\0\4\20\4\0\16\20\1\u023a"+
    "\13\20\24\0\2\20\1\0\4\20\4\0\5\20\1\116"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\2\20\1\u0226"+
    "\27\20\24\0\2\20\1\0\4\20\4\0\16\20\1\u023b"+
    "\13\20\24\0\2\20\1\0\1\20\1\u01c2\2\20\4\0"+
    "\32\20\24\0\2\20\1\0\1\20\1\u023c\2\20\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\16\20\1\227"+
    "\13\20\24\0\2\20\1\0\4\20\4\0\11\20\1\u01a2"+
    "\20\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u023d"+
    "\12\20\24\0\2\20\1\0\3\20\1\u01ac\4\0\5\20"+
    "\1\335\24\20\24\0\2\20\1\0\4\20\4\0\2\20"+
    "\1\u023e\27\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\u023f\21\20\24\0\2\20\1\0\4\20\4\0\2\20"+
    "\1\u0240\27\20\24\0\2\20\1\0\4\20\4\0\5\20"+
    "\1\u01dd\24\20\24\0\2\20\1\0\2\20\1\u0119\1\20"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\16\20"+
    "\1\u0241\13\20\24\0\2\20\1\0\4\20\4\0\16\20"+
    "\1\222\13\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u0242\26\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\72\26\20\24\0\2\20\1\0\4\20\4\0\13\20"+
    "\1\u01bf\16\20\24\0\2\20\1\0\4\20\4\0\4\20"+
    "\1\u0243\25\20\24\0\2\20\1\0\4\20\4\0\16\20"+
    "\1\u01c2\13\20\24\0\2\20\1\0\4\20\4\0\6\20"+
    "\1\u0244\23\20\24\0\2\20\1\0\4\20\4\0\17\20"+
    "\1\323\12\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\222\20\20\24\0\2\20\1\0\4\20\4\0\11\20"+
    "\1\241\20\20\24\0\2\20\1\0\3\20\1\u0245\4\0"+
    "\32\20\24\0\2\20\1\0\1\20\1\u0246\2\20\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\3\20\1\u0247"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\13\20\1\u01e8"+
    "\16\20\24\0\2\20\1\0\4\20\4\0\16\20\1\u0248"+
    "\13\20\24\0\2\20\1\0\1\20\1\u0161\2\20\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\11\20\1\u0249"+
    "\20\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u024a"+
    "\21\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u013e"+
    "\12\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u024b"+
    "\12\20\24\0\2\20\1\0\4\20\4\0\2\20\1\142"+
    "\27\20\24\0\2\20\1\0\4\20\4\0\6\20\1\u024c"+
    "\23\20\24\0\2\20\1\0\4\20\4\0\12\20\1\u024d"+
    "\17\20\24\0\2\20\1\0\4\20\4\0\13\20\1\u024e"+
    "\16\20\24\0\2\20\1\0\4\20\4\0\2\20\1\u01dd"+
    "\27\20\24\0\2\20\1\0\4\20\4\0\3\20\1\u024f"+
    "\26\20\24\0\2\20\1\0\4\20\4\0\5\20\1\u0250"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u0138"+
    "\6\20\1\310\3\20\24\0\2\20\1\0\4\20\4\0"+
    "\6\20\1\136\23\20\24\0\2\20\1\0\4\20\4\0"+
    "\5\20\1\u0251\24\20\24\0\2\20\1\0\4\20\4\0"+
    "\17\20\1\u0252\12\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\u0253\13\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\u0121\13\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\u0126\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\u0254\13\20\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\u0255\27\20\24\0\2\20\1\0\4\20\4\0"+
    "\10\20\1\u0256\21\20\24\0\2\20\1\0\4\20\4\0"+
    "\17\20\1\u0257\12\20\24\0\2\20\1\0\4\20\4\0"+
    "\5\20\1\135\24\20\24\0\2\20\1\0\4\20\4\0"+
    "\24\20\1\u0258\5\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\u0119\13\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\u01a5\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\11\20\1\u0259\20\20\24\0\2\20\1\0\4\20\4\0"+
    "\26\20\1\303\3\20\25\56\1\u022f\1\56\1\u022f\3\56"+
    "\1\0\1\56\1\257\60\56\1\u022f\1\56\1\u022f\3\56"+
    "\1\0\1\56\1\257\2\56\1\u01d8\2\56\1\u01d8\1\56"+
    "\1\u01d8\23\56\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\u025a\21\20\24\0\2\20\1\0\4\20\4\0\25\20"+
    "\1\u025b\4\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u020a\26\20\24\0\2\20\1\0\4\20\4\0\12\20"+
    "\1\u0160\17\20\42\0\1\u025c\52\0\2\20\1\0\4\20"+
    "\4\0\7\20\1\u025d\22\20\24\0\2\20\1\0\4\20"+
    "\4\0\13\20\1\u0250\16\20\24\0\2\20\1\0\4\20"+
    "\4\0\16\20\1\u025e\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\307\1\20\1\354\24\20\24\0\2\20"+
    "\1\0\4\20\4\0\12\20\1\u0250\2\20\1\136\14\20"+
    "\24\0\2\20\1\0\4\20\4\0\15\20\1\u025f\14\20"+
    "\24\0\2\20\1\0\1\20\1\u0138\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\u0260\24\20"+
    "\24\0\2\20\1\0\1\20\1\u0261\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\143\24\20"+
    "\24\0\2\20\1\0\1\20\1\u0262\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\6\20\1\u0263\23\20"+
    "\24\0\2\20\1\0\1\20\1\u0264\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\16\20\1\u0265\13\20"+
    "\24\0\2\20\1\0\2\20\1\u01f0\1\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\3\20\1\u0266\26\20"+
    "\24\0\2\20\1\0\4\20\4\0\10\20\1\u0267\21\20"+
    "\24\0\2\20\1\0\4\20\4\0\11\20\1\u0268\20\20"+
    "\24\0\2\20\1\0\1\20\1\u0269\2\20\4\0\32\20"+
    "\24\0\2\20\1\0\4\20\4\0\5\20\1\u026a\24\20"+
    "\24\0\2\20\1\0\4\20\4\0\3\20\1\135\12\20"+
    "\1\u0169\13\20\24\0\2\20\1\0\4\20\4\0\12\20"+
    "\1\u026b\17\20\24\0\2\20\1\0\4\20\4\0\3\20"+
    "\1\u026c\26\20\24\0\2\20\1\0\4\20\4\0\2\20"+
    "\1\u0229\27\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\u026d\21\20\24\0\2\20\1\0\1\20\1\u026e\2\20"+
    "\4\0\32\20\24\0\2\20\1\0\4\20\4\0\10\20"+
    "\1\u01a5\21\20\24\0\2\20\1\0\3\20\1\u026f\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\16\20\1\u0192"+
    "\13\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u0270"+
    "\21\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u0271"+
    "\21\20\24\0\2\20\1\0\1\20\1\u0272\2\20\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\16\20\1\u0273"+
    "\13\20\24\0\2\20\1\0\4\20\4\0\10\20\1\u0274"+
    "\21\20\24\0\2\20\1\0\4\20\4\0\27\20\1\u0275"+
    "\2\20\24\0\2\20\1\0\1\20\1\u0126\2\20\4\0"+
    "\32\20\24\0\2\20\1\0\4\20\4\0\5\20\1\u0276"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u0277"+
    "\12\20\52\0\1\u0278\42\0\2\20\1\0\4\20\4\0"+
    "\10\20\1\u0279\21\20\24\0\2\20\1\0\4\20\4\0"+
    "\22\20\1\u01bf\7\20\24\0\2\20\1\0\2\20\1\u027a"+
    "\1\20\4\0\32\20\24\0\2\20\1\0\4\20\4\0"+
    "\24\20\1\u027b\5\20\24\0\2\20\1\0\4\20\4\0"+
    "\26\20\1\u01aa\3\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\u027c\26\20\24\0\2\20\1\0\4\20\4\0"+
    "\13\20\1\u027d\16\20\24\0\2\20\1\0\4\20\4\0"+
    "\13\20\1\276\16\20\24\0\2\20\1\0\4\20\4\0"+
    "\21\20\1\u0244\10\20\24\0\2\20\1\0\4\20\4\0"+
    "\21\20\1\276\10\20\24\0\2\20\1\0\4\20\4\0"+
    "\27\20\1\u027e\2\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\307\26\20\24\0\2\20\1\0\4\20\4\0"+
    "\17\20\1\u0279\12\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\u027f\13\20\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\u0280\27\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\u0281\26\20\24\0\2\20\1\0\4\20\4\0"+
    "\21\20\1\206\10\20\24\0\2\20\1\0\4\20\4\0"+
    "\20\20\1\u0282\11\20\24\0\2\20\1\0\4\20\4\0"+
    "\20\20\1\u0283\11\20\24\0\2\20\1\0\4\20\4\0"+
    "\13\20\1\u0284\16\20\24\0\2\20\1\0\4\20\4\0"+
    "\16\20\1\u0285\13\20\24\0\2\20\1\0\4\20\4\0"+
    "\17\20\1\u0286\12\20\24\0\2\20\1\0\4\20\4\0"+
    "\3\20\1\236\26\20\24\0\2\20\1\0\4\20\4\0"+
    "\10\20\1\u0287\21\20\24\0\2\20\1\0\4\20\4\0"+
    "\10\20\1\u0268\21\20\24\0\2\20\1\0\4\20\4\0"+
    "\12\20\1\161\17\20\24\0\2\20\1\0\4\20\4\0"+
    "\27\20\1\u0288\2\20\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\336\27\20\24\0\2\20\1\0\2\20\1\u01c3"+
    "\1\20\4\0\6\20\1\u0121\1\20\1\u0289\21\20\24\0"+
    "\2\20\1\0\1\20\1\u028a\2\20\4\0\32\20\24\0"+
    "\2\20\1\0\1\20\1\311\2\20\4\0\32\20\24\0"+
    "\2\20\1\0\4\20\4\0\11\20\1\u012d\20\20\24\0"+
    "\2\20\1\0\4\20\4\0\13\20\1\u027d\13\20\1\u028b"+
    "\2\20\24\0\2\20\1\0\4\20\4\0\5\20\1\u028c"+
    "\24\20\24\0\2\20\1\0\4\20\4\0\17\20\1\u028d"+
    "\3\20\1\u028e\6\20\24\0\2\20\1\0\4\20\4\0"+
    "\13\20\1\u0160\16\20\24\0\2\20\1\0\4\20\4\0"+
    "\2\20\1\u028f\27\20\24\0\2\20\1\0\4\20\4\0"+
    "\5\20\1\354\24\20\24\0\2\20\1\0\4\20\4\0"+
    "\14\20\1\u0290\7\20\1\u0291\5\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\u0292\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\10\20\1\u022d\21\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\u0293\13\20\24\0\2\20\1\0"+
    "\2\20\1\u0294\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\u0295\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u0296\26\20\24\0\2\20\1\0"+
    "\2\20\1\u0297\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\2\20\1\u0298\27\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\u0299\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\24\20\1\u029a\5\20\24\0\2\20\1\0"+
    "\1\20\1\u029b\2\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\6\20\1\u01b0\23\20\24\0\2\20\1\0"+
    "\4\20\4\0\24\20\1\u029c\5\20\24\0\2\20\1\0"+
    "\4\20\4\0\20\20\1\u029d\11\20\24\0\2\20\1\0"+
    "\4\20\4\0\11\20\1\u013e\20\20\24\0\2\20\1\0"+
    "\2\20\1\u0124\1\20\4\0\32\20\24\0\2\20\1\0"+
    "\1\20\1\u01af\2\20\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\3\20\1\u029e\26\20\24\0\2\20\1\0"+
    "\4\20\4\0\17\20\1\u01aa\12\20\24\0\2\20\1\0"+
    "\4\20\4\0\16\20\1\u029f\13\20\24\0\2\20\1\0"+
    "\4\20\4\0\12\20\1\u02a0\17\20\24\0\2\20\1\0"+
    "\4\20\4\0\17\20\1\u01fc\12\20\24\0\2\20\1\0"+
    "\3\20\1\u02a1\4\0\32\20\24\0\2\20\1\0\4\20"+
    "\4\0\14\20\1\u02a2\15\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\u02a3\24\20\24\0\2\20\1\0\4\20"+
    "\4\0\11\20\1\u02a4\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\11\20\1\u02a5\20\20\24\0\2\20\1\0\4\20"+
    "\4\0\5\20\1\u02a6\24\20\24\0\2\20\1\0\4\20"+
    "\4\0\16\20\1\u02a7\13\20\24\0\2\20\1\0\4\20"+
    "\4\0\17\20\1\u02a8\12\20\24\0\2\20\1\0\4\20"+
    "\4\0\10\20\1\u02a9\21\20\24\0\2\20\1\0\4\20"+
    "\4\0\3\20\1\u02aa\26\20\24\0\2\20\1\0\4\20"+
    "\4\0\20\20\1\u02ab\11\20\24\0\2\20\1\0\4\20"+
    "\4\0\6\20\1\u02ac\1\20\1\u0287\21\20\24\0\2\20"+
    "\1\0\4\20\4\0\3\20\1\u02ad\26\20\24\0\2\20"+
    "\1\0\4\20\4\0\10\20\1\u02ae\21\20\24\0\2\20"+
    "\1\0\4\20\4\0\5\20\1\u02af\24\20\24\0\2\20"+
    "\1\0\4\20\4\0\16\20\1\u02b0\13\20\24\0\2\20"+
    "\1\0\3\20\1\u02b1\4\0\32\20\24\0\2\20\1\0"+
    "\4\20\4\0\17\20\1\u02aa\12\20";

  private static int [] zzUnpackTrans() {
    int [] result = new int[37449];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\47\1\1\0\4\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\11\14\1\2\0\151\1"+
    "\1\11\3\1\1\0\1\1\3\0\26\1\1\11\1\0"+
    "\201\1\1\11\3\1\3\0\1\1\1\11\13\1\1\0"+
    "\1\11\5\1\1\0\154\1\1\0\1\11\14\1\1\0"+
    "\114\1\1\0\47\1\1\0\33\1\1\11\71\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[689];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int line;
public int column;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 188) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { line=yyline; column=yycolumn; return ERROR;
            } 
            // fall through
          case 16: break;
          case 2: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return OPERADORES;
            } 
            // fall through
          case 17: break;
          case 3: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return SEPARADOR;
            } 
            // fall through
          case 18: break;
          case 4: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return IDENTIFICADORES;
            } 
            // fall through
          case 19: break;
          case 5: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return INT;
            } 
            // fall through
          case 20: break;
          case 6: 
            { /*Ignore*/
            } 
            // fall through
          case 21: break;
          case 7: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return BIT;
            } 
            // fall through
          case 22: break;
          case 8: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return ERRORCOMMENT;
            } 
            // fall through
          case 23: break;
          case 9: 
            { lexeme=yytext();line=yyline; column=yycolumn; return FLOATERROR;
            } 
            // fall through
          case 24: break;
          case 10: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return FLOAT;
            } 
            // fall through
          case 25: break;
          case 11: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return RESERVADAS;
            } 
            // fall through
          case 26: break;
          case 12: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return SINGLECOMMENT;
            } 
            // fall through
          case 27: break;
          case 13: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return STRINGERROR;
            } 
            // fall through
          case 28: break;
          case 14: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return STRING;
            } 
            // fall through
          case 29: break;
          case 15: 
            { lexeme=yytext(); line=yyline; column=yycolumn; return MULTICOMMENT;
            } 
            // fall through
          case 30: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
