/* The following code was generated by JFlex 1.7.0 */

package lexCode;
import static lexCode.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/Bryan/Documents/NetBeansProjects/Lex_Analyzer/LexicalAnalyzer/src/lexCode/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\33\1\101\1\101\1\33\22\0\1\4\1\21\1\0"+
    "\1\32\1\0\1\17\1\22\1\34\1\26\1\27\1\15\1\14\1\4"+
    "\1\12\1\13\1\16\2\6\10\3\1\0\1\17\1\21\1\20\1\21"+
    "\1\0\1\17\1\35\1\50\1\45\1\36\1\37\1\46\1\54\1\47"+
    "\1\51\1\62\1\56\1\11\1\57\1\7\1\44\1\43\1\63\1\42"+
    "\1\52\1\41\1\10\1\61\1\60\1\40\1\53\1\55\1\24\1\0"+
    "\1\25\1\0\1\2\1\0\1\72\1\73\1\76\1\1\1\5\1\67"+
    "\1\100\1\77\1\64\2\1\1\70\1\1\1\65\1\71\2\1\1\75"+
    "\1\1\1\66\1\1\1\74\4\1\1\30\1\23\1\31\7\0\1\101"+
    "\u1fa2\0\1\101\1\101\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\3\2\6\6"+
    "\2\1\4\6\1\7\31\2\1\10\3\2\1\11\10\2"+
    "\1\0\1\12\1\0\1\13\1\14\1\15\4\2\1\11"+
    "\3\2\1\11\20\2\1\11\17\2\1\11\1\2\1\11"+
    "\2\2\1\11\30\2\1\11\1\2\1\11\22\2\1\11"+
    "\20\2\1\13\14\2\1\11\7\2\1\13\1\14\1\0"+
    "\1\2\1\11\7\2\1\11\7\2\1\11\51\2\1\11"+
    "\26\2\1\11\14\2\1\11\1\2\1\11\7\2\1\11"+
    "\2\2\1\11\12\2\1\11\3\2\1\11\1\2\1\11"+
    "\10\2\1\10\1\13\1\11\12\2\1\13\1\16\1\0"+
    "\14\2\1\11\3\2\1\0\11\2\1\11\3\2\1\11"+
    "\3\2\1\11\20\2\1\11\2\2\1\11\2\2\1\11"+
    "\17\2\1\11\5\2\1\11\37\2\2\11\10\2\1\14"+
    "\1\16\13\2\1\0\1\2\1\11\46\2\1\11\33\2"+
    "\1\11\6\2\1\0\1\11\50\2\1\0\11\2\1\11"+
    "\1\2\1\11\12\2\1\11\5\2\1\11\6\2\1\11"+
    "\3\2\1\11\34\2\1\11\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[690];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\102\0\204\0\306\0\u0108\0\306\0\u014a\0\u018c"+
    "\0\u01ce\0\u0210\0\u0252\0\u0294\0\102\0\u02d6\0\u0318\0\u035a"+
    "\0\u039c\0\u03de\0\u0420\0\u0462\0\u04a4\0\u04e6\0\u0528\0\u056a"+
    "\0\u05ac\0\u05ee\0\u0630\0\u0672\0\u06b4\0\u06f6\0\u0738\0\u077a"+
    "\0\u07bc\0\u07fe\0\u0840\0\u0882\0\u08c4\0\u0906\0\u0948\0\u098a"+
    "\0\u09cc\0\u0a0e\0\u0a50\0\u0a92\0\u0ad4\0\u0b16\0\u0b58\0\u0b9a"+
    "\0\u0bdc\0\u0c1e\0\u0c60\0\u0ca2\0\u0ce4\0\u0d26\0\u0d68\0\u0daa"+
    "\0\u0dec\0\u0e2e\0\u0e70\0\u0eb2\0\u0ef4\0\u0f36\0\u0252\0\u0f78"+
    "\0\u0fba\0\102\0\u0ffc\0\u103e\0\u1080\0\u10c2\0\204\0\u1104"+
    "\0\u1146\0\u1188\0\u11ca\0\u120c\0\u124e\0\u1290\0\u12d2\0\u1314"+
    "\0\u1356\0\u1398\0\u13da\0\u141c\0\u145e\0\u14a0\0\u14e2\0\u1524"+
    "\0\u1566\0\u15a8\0\u15ea\0\u162c\0\u166e\0\u16b0\0\u16f2\0\u1734"+
    "\0\u1776\0\u17b8\0\u17fa\0\u183c\0\u187e\0\u18c0\0\u1902\0\u1944"+
    "\0\u1986\0\u19c8\0\u1a0a\0\u1a4c\0\u1a8e\0\u1ad0\0\u1b12\0\u1b54"+
    "\0\u1b96\0\u1bd8\0\u1c1a\0\u1c5c\0\u1c9e\0\u1ce0\0\u1d22\0\u1d64"+
    "\0\u1da6\0\u1de8\0\u1e2a\0\u1e6c\0\u1eae\0\u1ef0\0\u1f32\0\u1f74"+
    "\0\u1fb6\0\u1ff8\0\u203a\0\u207c\0\u20be\0\u2100\0\u2142\0\u2184"+
    "\0\u21c6\0\u2208\0\u224a\0\u228c\0\u22ce\0\u2310\0\u2352\0\u2394"+
    "\0\u23d6\0\u2418\0\u245a\0\u249c\0\u24de\0\u2520\0\u2562\0\u25a4"+
    "\0\u25e6\0\u2628\0\u266a\0\u26ac\0\u26ee\0\u2730\0\u2772\0\u27b4"+
    "\0\u27f6\0\u2838\0\u287a\0\u28bc\0\u28fe\0\u2940\0\u2982\0\u29c4"+
    "\0\u2a06\0\u2a48\0\u2a8a\0\u2acc\0\u2b0e\0\u2b50\0\u2b92\0\u2bd4"+
    "\0\u2c16\0\u2c58\0\u2c9a\0\u2cdc\0\u2d1e\0\u2d60\0\u2da2\0\u2de4"+
    "\0\u2e26\0\u2e68\0\u2eaa\0\u2eec\0\u2f2e\0\u2f70\0\u2fb2\0\u2ff4"+
    "\0\u3036\0\u3078\0\u30ba\0\u30fc\0\u313e\0\u3180\0\u31c2\0\u3204"+
    "\0\u3246\0\u3288\0\u32ca\0\u330c\0\u162c\0\u334e\0\u3390\0\u33d2"+
    "\0\u3414\0\u3456\0\u3498\0\u34da\0\u351c\0\u355e\0\u35a0\0\u35e2"+
    "\0\u3624\0\u3666\0\u36a8\0\u36ea\0\u372c\0\u376e\0\u37b0\0\u37f2"+
    "\0\u3834\0\u3876\0\u38b8\0\u38fa\0\u393c\0\u397e\0\u39c0\0\u3a02"+
    "\0\u3a44\0\u3a86\0\u3ac8\0\u3b0a\0\u3b4c\0\u3b8e\0\u3bd0\0\u3c12"+
    "\0\u3c54\0\u3c96\0\u3cd8\0\u3d1a\0\u3d5c\0\u3d9e\0\u3de0\0\u3e22"+
    "\0\u3e64\0\u3ea6\0\u3ee8\0\u3f2a\0\u3f6c\0\u3fae\0\u3ff0\0\u4032"+
    "\0\u4074\0\u40b6\0\u40f8\0\u413a\0\u417c\0\u41be\0\u4200\0\u4242"+
    "\0\u4284\0\u42c6\0\u4308\0\u434a\0\u438c\0\u43ce\0\u4410\0\u4452"+
    "\0\u4494\0\u44d6\0\u4518\0\u455a\0\u459c\0\u45de\0\u4620\0\u4662"+
    "\0\u46a4\0\u46e6\0\u4728\0\u476a\0\u47ac\0\u47ee\0\u2f2e\0\u4830"+
    "\0\u4872\0\u48b4\0\u48f6\0\u4938\0\u497a\0\u49bc\0\u49fe\0\u4a40"+
    "\0\u4a82\0\u4ac4\0\u4b06\0\u4b48\0\u4b8a\0\u4bcc\0\u4c0e\0\u4c50"+
    "\0\u4c92\0\u4cd4\0\u4d16\0\u4d58\0\u4d9a\0\u4ddc\0\u4e1e\0\u4e60"+
    "\0\u4ea2\0\u4ee4\0\u4f26\0\u4f68\0\u4faa\0\u4fec\0\u502e\0\u5070"+
    "\0\u50b2\0\u50f4\0\u5136\0\u5178\0\u51ba\0\u51fc\0\u523e\0\u5280"+
    "\0\u52c2\0\u5304\0\u5346\0\u5388\0\u53ca\0\u540c\0\u540c\0\u544e"+
    "\0\u5490\0\u54d2\0\u5514\0\u5556\0\u5598\0\u55da\0\u561c\0\u565e"+
    "\0\u56a0\0\u56e2\0\u5724\0\u5766\0\u57a8\0\u57ea\0\u582c\0\u586e"+
    "\0\u58b0\0\u58f2\0\u5934\0\u5976\0\u59b8\0\u59fa\0\u5a3c\0\u5a7e"+
    "\0\u5ac0\0\u5b02\0\u5b44\0\u5b86\0\u5bc8\0\u5c0a\0\u5c4c\0\u5c8e"+
    "\0\u5cd0\0\u5d12\0\u5d54\0\u5d96\0\u5dd8\0\u5136\0\u5e1a\0\u5e5c"+
    "\0\u5e9e\0\u5ee0\0\u5f22\0\u5f64\0\u5fa6\0\u5fe8\0\u602a\0\u606c"+
    "\0\u60ae\0\u60f0\0\u6132\0\u6174\0\u61b6\0\u61f8\0\u623a\0\u627c"+
    "\0\u62be\0\u6300\0\u6342\0\u6384\0\u63c6\0\u6408\0\u644a\0\u648c"+
    "\0\u64ce\0\u6510\0\u6552\0\u6594\0\u65d6\0\u6618\0\u665a\0\u669c"+
    "\0\u66de\0\u6720\0\u6762\0\u67a4\0\u67e6\0\u6828\0\u686a\0\u68ac"+
    "\0\u68ee\0\u6930\0\u6972\0\u69b4\0\u51ba\0\u69f6\0\u6a38\0\u6a7a"+
    "\0\u6abc\0\u6afe\0\u6b40\0\u6b82\0\u6bc4\0\u6c06\0\u6c48\0\u6c8a"+
    "\0\u6ccc\0\u6d0e\0\u6d50\0\u6d92\0\u6dd4\0\u6e16\0\u6e58\0\u6e9a"+
    "\0\u6edc\0\u6f1e\0\u6f60\0\u6fa2\0\u6fe4\0\u7026\0\u7068\0\u70aa"+
    "\0\u70ec\0\u712e\0\u7170\0\u71b2\0\u71f4\0\u7236\0\u7278\0\u72ba"+
    "\0\u72fc\0\u733e\0\u7380\0\u73c2\0\u7404\0\u7446\0\u7488\0\u74ca"+
    "\0\u750c\0\u754e\0\u7590\0\u75d2\0\u7614\0\u7656\0\u5766\0\102"+
    "\0\u7698\0\u76da\0\u3246\0\u771c\0\u775e\0\u77a0\0\u77e2\0\u7824"+
    "\0\u7866\0\u78a8\0\u78ea\0\u792c\0\u796e\0\u79b0\0\u79f2\0\u7a34"+
    "\0\u7a76\0\u7ab8\0\u7afa\0\u7b3c\0\u7b7e\0\u7bc0\0\u7c02\0\u7c44"+
    "\0\u7c86\0\u7cc8\0\u7d0a\0\u7d4c\0\u7d8e\0\u7dd0\0\u7e12\0\u7e54"+
    "\0\u7e96\0\u7ed8\0\u7f1a\0\u7f5c\0\u7f9e\0\u7fe0\0\u49fe\0\u8022"+
    "\0\u8064\0\u80a6\0\u80e8\0\u812a\0\u816c\0\u81ae\0\u81f0\0\u8232"+
    "\0\u8274\0\u82b6\0\u82f8\0\u833a\0\u837c\0\u83be\0\u8400\0\u8442"+
    "\0\u8484\0\u84c6\0\u8508\0\u854a\0\u858c\0\u85ce\0\u8610\0\u8652"+
    "\0\u8694\0\u86d6\0\u8718\0\u875a\0\u879c\0\u87de\0\u8820\0\u8862"+
    "\0\u88a4\0\u88e6\0\u8928\0\u896a\0\u89ac\0\u89ee\0\u8a30\0\u8a72"+
    "\0\u5556\0\u8ab4\0\u8af6\0\u8b38\0\u8b7a\0\u8bbc\0\u8bfe\0\u8c40"+
    "\0\u3288\0\u8c82\0\u8cc4\0\u8d06\0\u8d48\0\u8d8a\0\u8dcc\0\u8e0e"+
    "\0\u8e50\0\u8e92\0\u8ed4\0\u8f16\0\u8f58\0\u8f9a\0\u8fdc\0\u901e"+
    "\0\u9060\0\u90a2\0\u90e4\0\u9126\0\u9168\0\u91aa\0\u91ec\0\u922e"+
    "\0\u9270\0\u92b2\0\u92f4\0\u9336\0\u9378\0\u93ba\0\u93fc\0\u943e"+
    "\0\u9480\0\u94c2\0\u9504\0\u9546\0\u9588\0\u95ca\0\u960c\0\u964e"+
    "\0\u9690\0\u96d2\0\u9714\0\u9756\0\u9798\0\u97da\0\u981c\0\u985e"+
    "\0\u98a0\0\u98e2\0\u9924\0\u9966\0\u99a8\0\u3078\0\u99ea\0\u9a2c"+
    "\0\u9a6e\0\u9ab0\0\u9af2\0\u9b34\0\u9b76\0\u1a4c\0\u9bb8\0\u9bfa"+
    "\0\u9588\0\u9c3c\0\u9c7e\0\u4d58\0\u9cc0\0\u9d02\0\102\0\u9d44"+
    "\0\u9d86\0\u9dc8\0\u9e0a\0\u9e4c\0\u9e8e\0\u9ed0\0\u9f12\0\u9f54"+
    "\0\u9f96\0\u9fd8\0\ua01a\0\ua05c\0\ua09e\0\ua0e0\0\ua122\0\ua164"+
    "\0\ua1a6\0\ua1e8\0\ua22a\0\ua26c\0\ua2ae\0\ua2f0\0\ua332\0\ua374"+
    "\0\ua3b6\0\ua3f8\0\ua43a\0\ua47c\0\ua4be\0\ua500\0\ua542\0\ua584"+
    "\0\ua5c6\0\ua608\0\ua64a\0\ua68c\0\ua6ce\0\ua710\0\ua752\0\ua794"+
    "\0\ua7d6\0\ua818\0\ua85a\0\ua89c\0\ua8de\0\ua920\0\ua962\0\ua9a4"+
    "\0\ua9e6\0\uaa28\0\u9ed0\0\uaa6a\0\uaaac\0\uaaee\0\uab30\0\uab72"+
    "\0\uabb4\0\uabf6";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[690];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\2\1\4\1\5\1\3\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\15"+
    "\2\17\1\20\1\21\1\22\1\15\1\23\1\15\1\24"+
    "\1\15\1\25\1\5\1\26\1\27\1\30\1\31\1\3"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\53\1\3\1\54\2\3\1\55\3\3\1\56"+
    "\1\57\4\3\104\0\3\3\1\0\5\3\23\0\44\3"+
    "\4\0\1\4\2\0\1\4\4\0\1\60\72\0\1\5"+
    "\26\0\1\5\47\0\3\3\1\0\3\3\1\61\1\3"+
    "\23\0\1\62\1\3\1\63\4\3\1\64\1\65\33\3"+
    "\2\0\3\3\1\0\2\3\1\66\2\3\23\0\6\3"+
    "\1\67\6\3\1\70\26\3\2\0\3\3\1\0\5\3"+
    "\23\0\1\71\1\3\1\72\4\3\1\73\4\3\1\74"+
    "\27\3\4\0\1\75\2\0\1\75\3\0\1\76\1\77"+
    "\71\0\1\100\2\0\1\100\76\0\1\75\2\0\1\75"+
    "\4\0\1\77\103\0\1\101\104\0\1\15\103\0\1\15"+
    "\102\0\1\15\103\0\1\15\103\0\1\15\103\0\1\15"+
    "\102\0\1\15\47\0\33\26\1\0\1\102\45\26\1\0"+
    "\3\3\1\0\2\3\1\103\1\104\1\105\23\0\1\3"+
    "\1\106\2\3\1\107\1\110\2\3\1\111\2\3\1\112"+
    "\1\3\1\113\6\3\1\114\17\3\2\0\3\3\1\0"+
    "\3\3\1\115\1\3\23\0\1\116\1\3\1\117\2\3"+
    "\1\120\1\3\1\121\3\3\1\122\1\123\27\3\2\0"+
    "\3\3\1\0\2\3\1\124\1\3\1\125\23\0\3\3"+
    "\1\126\1\3\1\127\7\3\1\130\26\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\131\1\3\1\132\2\3\1\133"+
    "\1\3\1\134\2\3\1\135\1\3\1\136\1\137\26\3"+
    "\2\0\3\3\1\0\3\3\1\140\1\3\23\0\1\141"+
    "\1\3\1\142\4\3\1\143\4\3\1\144\27\3\2\0"+
    "\3\3\1\0\3\3\1\145\1\146\23\0\1\147\1\3"+
    "\1\150\2\3\1\151\1\3\1\152\4\3\1\153\27\3"+
    "\2\0\3\3\1\0\2\3\1\154\1\155\1\3\23\0"+
    "\5\3\1\156\1\157\1\3\1\160\1\161\12\3\1\162"+
    "\17\3\2\0\3\3\1\0\3\3\1\163\1\164\23\0"+
    "\1\165\4\3\1\166\1\3\1\167\2\3\1\170\31\3"+
    "\2\0\3\3\1\0\3\3\1\171\1\172\23\0\1\173"+
    "\1\3\1\174\2\3\1\175\1\3\1\176\4\3\1\177"+
    "\16\3\1\200\10\3\2\0\3\3\1\0\5\3\23\0"+
    "\1\201\6\3\1\202\34\3\2\0\3\3\1\0\3\3"+
    "\1\203\1\3\23\0\1\204\1\3\1\205\2\3\1\206"+
    "\1\3\1\207\4\3\1\210\1\3\1\107\10\3\1\211"+
    "\14\3\2\0\3\3\1\0\2\3\1\212\2\3\23\0"+
    "\1\3\1\213\7\3\1\107\3\3\1\214\4\3\1\215"+
    "\5\3\1\216\13\3\2\0\3\3\1\0\3\3\1\217"+
    "\1\3\23\0\1\220\1\3\1\221\1\3\1\222\1\3"+
    "\1\223\1\224\1\225\1\3\1\226\1\3\1\227\1\3"+
    "\1\230\3\3\1\231\3\3\1\232\15\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\233\41\3\2\0\3\3"+
    "\1\0\4\3\1\234\23\0\2\3\1\235\2\3\1\236"+
    "\1\3\1\237\34\3\2\0\3\3\1\0\5\3\23\0"+
    "\7\3\1\240\34\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\241\11\3\1\242\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\243\1\3\1\244\4\3\1\245\4\3"+
    "\1\246\27\3\2\0\3\3\1\0\5\3\23\0\1\247"+
    "\4\3\1\250\1\3\1\251\2\3\1\252\1\3\1\253"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\1\254\13\3"+
    "\1\255\20\3\1\256\6\3\2\0\3\3\1\0\5\3"+
    "\23\0\7\3\1\257\34\3\2\0\3\3\1\0\5\3"+
    "\23\0\30\3\1\216\13\3\2\0\3\3\1\0\5\3"+
    "\23\0\33\3\1\200\10\3\2\0\3\3\1\0\5\3"+
    "\23\0\27\3\1\211\14\3\2\0\3\3\1\0\5\3"+
    "\23\0\35\3\1\256\6\3\4\0\1\60\1\0\1\260"+
    "\1\60\30\0\1\260\43\0\3\3\1\0\4\3\1\261"+
    "\23\0\22\3\1\262\21\3\2\0\3\3\1\0\5\3"+
    "\23\0\4\3\1\263\15\3\1\264\21\3\2\0\3\3"+
    "\1\0\5\3\23\0\3\3\1\235\40\3\2\0\3\3"+
    "\1\0\2\3\1\265\2\3\23\0\4\3\1\107\3\3"+
    "\1\266\33\3\2\0\3\3\1\0\5\3\23\0\12\3"+
    "\1\233\31\3\2\0\3\3\1\0\5\3\23\0\6\3"+
    "\1\267\5\3\1\270\4\3\1\271\22\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\3\1\272\4\3\1\273\35\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\274\1\3\1\275"+
    "\11\3\1\276\27\3\2\0\3\3\1\0\2\3\1\277"+
    "\2\3\23\0\15\3\1\235\26\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\300\10\3\1\235\12\3\1\301\17\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\302\7\3\1\303"+
    "\12\3\1\273\20\3\2\0\3\3\1\0\2\3\1\304"+
    "\2\3\23\0\21\3\1\110\22\3\4\0\1\75\2\0"+
    "\1\75\4\0\1\60\66\0\33\76\1\0\46\76\3\0"+
    "\1\100\1\0\1\305\1\100\30\0\1\305\42\0\15\101"+
    "\1\306\15\101\1\307\46\101\1\0\3\3\1\0\5\3"+
    "\23\0\1\3\1\107\14\3\1\107\25\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\310\37\3\2\0\3\3"+
    "\1\0\4\3\1\311\23\0\4\3\1\273\37\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\107\42\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\107\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\312\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\313\26\3\2\0\3\3"+
    "\1\0\5\3\23\0\10\3\1\107\4\3\1\314\26\3"+
    "\2\0\3\3\1\0\5\3\23\0\17\3\1\107\24\3"+
    "\2\0\3\3\1\0\5\3\23\0\22\3\1\315\21\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\316\11\3"+
    "\1\107\25\3\2\0\3\3\1\0\2\3\1\241\1\3"+
    "\1\317\23\0\1\320\7\3\1\321\1\322\3\3\1\323"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\7\3\1\315"+
    "\34\3\2\0\3\3\1\0\3\3\1\324\1\3\23\0"+
    "\22\3\1\325\21\3\2\0\3\3\1\0\5\3\23\0"+
    "\10\3\1\326\33\3\2\0\3\3\1\0\5\3\23\0"+
    "\1\327\14\3\1\330\26\3\2\0\3\3\1\0\5\3"+
    "\23\0\1\3\1\331\42\3\2\0\3\3\1\0\5\3"+
    "\23\0\15\3\1\110\26\3\2\0\3\3\1\0\5\3"+
    "\23\0\2\3\1\332\1\3\1\333\3\3\1\334\3\3"+
    "\1\335\27\3\2\0\3\3\1\0\5\3\23\0\5\3"+
    "\1\336\36\3\2\0\3\3\1\0\5\3\23\0\10\3"+
    "\1\337\33\3\2\0\3\3\1\0\5\3\23\0\13\3"+
    "\1\340\30\3\2\0\3\3\1\0\5\3\23\0\3\3"+
    "\1\341\16\3\1\342\21\3\2\0\3\3\1\0\3\3"+
    "\1\343\1\3\23\0\1\344\13\3\1\345\1\3\1\346"+
    "\25\3\2\0\3\3\1\0\5\3\23\0\6\3\1\107"+
    "\35\3\2\0\3\3\1\0\5\3\23\0\2\3\1\347"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\22\3\1\350"+
    "\21\3\2\0\3\3\1\0\5\3\23\0\2\3\1\351"+
    "\41\3\2\0\3\3\1\0\4\3\1\110\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\352\27\3"+
    "\2\0\3\3\1\0\4\3\1\353\23\0\1\354\3\3"+
    "\1\355\1\3\1\356\1\3\1\357\1\360\1\3\1\361"+
    "\1\3\1\362\6\3\1\363\17\3\2\0\3\3\1\0"+
    "\4\3\1\364\23\0\23\3\1\365\20\3\2\0\3\3"+
    "\1\0\5\3\23\0\17\3\1\366\24\3\2\0\3\3"+
    "\1\0\5\3\23\0\13\3\1\367\30\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\347\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\3\1\107\3\3\1\370\7\3\1\371"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\5\3\1\372"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\2\3\1\373"+
    "\4\3\1\374\4\3\1\375\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\15\3\1\376\26\3\2\0\3\3\1\0"+
    "\5\3\23\0\24\3\1\377\17\3\2\0\3\3\1\0"+
    "\4\3\1\241\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\4\3\1\u0100\37\3\2\0\3\3\1\0\5\3"+
    "\23\0\1\3\1\273\42\3\2\0\3\3\1\0\5\3"+
    "\23\0\2\3\1\u0101\1\3\1\312\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u0102\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\11\3\1\u0103\32\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u0104\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\u0105\36\3\2\0\3\3"+
    "\1\0\3\3\1\u0106\1\3\23\0\7\3\1\125\34\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0107\10\3"+
    "\1\u0108\26\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\u0109\4\3\1\u010a\34\3\2\0\3\3\1\0\2\3"+
    "\1\u010b\1\u010c\1\u010d\23\0\1\u010e\4\3\1\u010f\14\3"+
    "\1\u0110\21\3\2\0\3\3\1\0\5\3\23\0\1\u0111"+
    "\1\3\1\u0112\41\3\2\0\3\3\1\0\2\3\1\u0113"+
    "\1\3\1\u0114\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\7\3\1\u0115\34\3\2\0\3\3\1\0\4\3"+
    "\1\125\23\0\44\3\2\0\3\3\1\0\5\3\23\0"+
    "\4\3\1\u0116\37\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\u0117\4\3\1\u0118\34\3\2\0\3\3\1\0"+
    "\3\3\1\u0119\1\3\23\0\5\3\1\u011a\36\3\2\0"+
    "\3\3\1\0\4\3\1\u011b\23\0\5\3\1\u011c\36\3"+
    "\2\0\3\3\1\0\5\3\23\0\34\3\1\u011d\7\3"+
    "\2\0\3\3\1\0\5\3\23\0\24\3\1\u011e\17\3"+
    "\2\0\3\3\1\0\3\3\1\u011f\1\u0120\23\0\44\3"+
    "\2\0\3\3\1\0\4\3\1\u0121\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\10\3\1\u0122\33\3\2\0"+
    "\3\3\1\0\5\3\23\0\4\3\1\u0123\12\3\1\257"+
    "\24\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0124"+
    "\4\3\1\u0125\34\3\2\0\3\3\1\0\5\3\23\0"+
    "\4\3\1\u0126\37\3\2\0\3\3\1\0\5\3\23\0"+
    "\4\3\1\u0127\37\3\2\0\3\3\1\0\5\3\23\0"+
    "\31\3\1\107\12\3\2\0\3\3\1\0\2\3\1\273"+
    "\2\3\23\0\1\3\1\u0128\2\3\1\u0129\1\3\1\u012a"+
    "\1\3\1\u012b\3\3\1\u012c\1\u012d\26\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u012e\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\7\3\1\u012f\34\3\2\0\3\3"+
    "\1\0\5\3\23\0\22\3\1\u0130\21\3\2\0\3\3"+
    "\1\0\5\3\23\0\31\3\1\u0131\12\3\2\0\3\3"+
    "\1\0\5\3\23\0\13\3\1\u0132\6\3\1\107\21\3"+
    "\2\0\3\3\1\0\5\3\23\0\24\3\1\110\17\3"+
    "\2\0\3\3\1\0\4\3\1\u0133\23\0\4\3\1\u0134"+
    "\3\3\1\u0135\4\3\1\u0136\4\3\1\u0137\21\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u0138\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u0139\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\22\3\1\110\21\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u013a\4\3\1\u013b\31\3\2\0"+
    "\3\3\1\0\3\3\1\u013c\1\3\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\20\3\1\110\23\3\2\0"+
    "\3\3\1\0\5\3\23\0\15\3\1\u013d\26\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u013e\43\3\2\0\3\3"+
    "\1\0\4\3\1\u013f\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\u011f\43\3\2\0\3\3\1\0\5\3"+
    "\23\0\7\3\1\u0140\34\3\2\0\3\3\1\0\5\3"+
    "\23\0\4\3\1\107\37\3\2\0\3\3\1\0\5\3"+
    "\23\0\1\u010c\6\3\1\u0141\34\3\2\0\3\3\1\0"+
    "\5\3\23\0\4\3\1\u0142\37\3\2\0\3\3\1\0"+
    "\2\3\1\110\2\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\16\3\1\107\25\3\2\0\3\3\1\0"+
    "\4\3\1\u0114\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\3\3\1\u0143\1\u0116\37\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\274\36\3\2\0\3\3\1\0"+
    "\2\3\1\207\2\3\23\0\1\3\1\u0144\42\3\2\0"+
    "\3\3\1\0\2\3\1\u0145\2\3\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u0146\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u0147\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\5\3\1\u0121\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u0148\11\3\1\140"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u0149"+
    "\37\3\2\0\3\3\1\0\4\3\1\u014a\23\0\5\3"+
    "\1\u014b\36\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\u014c\41\3\2\0\3\3\1\0\5\3\23\0\40\3"+
    "\1\u014d\3\3\2\0\3\3\1\0\5\3\23\0\14\3"+
    "\1\347\27\3\4\0\1\u014e\2\0\1\u014e\3\0\1\u014f"+
    "\1\0\1\u014f\66\0\3\3\1\0\4\3\1\u0150\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0151"+
    "\41\3\2\0\3\3\1\0\3\3\1\u0152\1\3\23\0"+
    "\14\3\1\u0153\27\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\u0154\41\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\107\5\3\1\u0155\33\3\2\0\3\3\1\0"+
    "\5\3\23\0\12\3\1\u0156\31\3\2\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\153\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\7\3\1\347\16\3\1\u0157\15\3\2\0"+
    "\3\3\1\0\2\3\1\u0158\2\3\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u0147\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u011f\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\17\3\1\110\24\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\107\36\3\2\0\3\3"+
    "\1\0\2\3\1\114\2\3\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\17\3\1\u0159\24\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\3\1\u011e\42\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u0114\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\3\1\107\42\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u0114\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\2\3\1\u015a\41\3\4\0\1\u015b\2\0"+
    "\1\u015b\3\0\1\u015b\1\0\1\u015b\65\0\15\101\1\306"+
    "\1\u015c\14\101\1\307\46\101\15\307\1\u015d\64\307\1\0"+
    "\3\3\1\0\5\3\23\0\12\3\1\u015e\31\3\2\0"+
    "\3\3\1\0\5\3\23\0\7\3\1\u015f\34\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u0160\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\7\3\1\u0161\34\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u0162\41\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u0163\1\3\1\107\41\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u0164\41\3"+
    "\2\0\3\3\1\0\4\3\1\u0165\23\0\44\3\2\0"+
    "\3\3\1\0\4\3\1\u0166\23\0\14\3\1\u0167\27\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\u0168\1\3\1\u0169"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\10\3\1\u016a"+
    "\33\3\2\0\3\3\1\0\5\3\23\0\13\3\1\140"+
    "\30\3\2\0\3\3\1\0\5\3\23\0\1\257\43\3"+
    "\2\0\3\3\1\0\5\3\23\0\10\3\1\107\33\3"+
    "\2\0\3\3\1\0\5\3\23\0\17\3\1\u016b\24\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u016c\3\3"+
    "\1\u016d\10\3\1\107\22\3\2\0\3\3\1\0\5\3"+
    "\1\u016e\22\0\44\3\2\0\3\3\1\0\5\3\23\0"+
    "\10\3\1\u0145\33\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\u016f\2\3\1\u0170\36\3\2\0\3\3\1\0"+
    "\5\3\23\0\2\3\1\u0171\41\3\2\0\3\3\1\0"+
    "\5\3\23\0\4\3\1\107\10\3\1\u0172\26\3\2\0"+
    "\3\3\1\0\4\3\1\u0173\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u0174\43\3\2\0\3\3\1\0"+
    "\4\3\1\u0175\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\4\3\1\u0176\37\3\2\0\3\3\1\0\5\3"+
    "\23\0\6\3\1\u0177\35\3\2\0\3\3\1\0\2\3"+
    "\1\u015f\2\3\23\0\2\3\1\107\41\3\2\0\3\3"+
    "\1\0\2\3\1\u0178\2\3\23\0\14\3\1\u0179\27\3"+
    "\2\0\3\3\1\0\5\3\23\0\17\3\1\u017a\2\3"+
    "\1\107\21\3\2\0\1\3\1\u017b\1\3\1\0\5\3"+
    "\23\0\44\3\2\0\3\3\1\0\2\3\1\107\2\3"+
    "\23\0\44\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\u017c\41\3\2\0\3\3\1\0\5\3\23\0\26\3"+
    "\1\u017d\15\3\2\0\3\3\1\0\5\3\23\0\15\3"+
    "\1\u017e\26\3\2\0\3\3\1\0\5\3\23\0\1\u017f"+
    "\43\3\2\0\3\3\1\0\4\3\1\107\23\0\1\3"+
    "\1\u0180\42\3\2\0\3\3\1\0\3\3\1\u0181\1\3"+
    "\23\0\44\3\2\0\3\3\1\0\4\3\1\u0182\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\7\3\1\u0183"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0184"+
    "\41\3\2\0\3\3\1\0\3\3\1\u0185\1\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u0186"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0187"+
    "\4\3\1\u0188\34\3\2\0\3\3\1\0\4\3\1\u0189"+
    "\23\0\44\3\2\0\3\3\1\0\5\3\23\0\10\3"+
    "\1\u018a\4\3\1\107\1\3\1\u018b\24\3\2\0\3\3"+
    "\1\0\5\3\23\0\12\3\1\235\31\3\2\0\3\3"+
    "\1\0\4\3\1\u018c\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\4\3\1\u018d\37\3\2\0\3\3\1\0"+
    "\5\3\23\0\10\3\1\303\33\3\2\0\3\3\1\0"+
    "\5\3\23\0\10\3\1\u018e\33\3\2\0\3\3\1\0"+
    "\5\3\23\0\6\3\1\u0166\1\3\1\u018f\4\3\1\u0190"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\10\3\1\u0191"+
    "\33\3\2\0\3\3\1\0\2\3\1\235\2\3\23\0"+
    "\7\3\1\u011f\12\3\1\u0192\1\3\1\u0193\17\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\111\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\7\3\1\235\34\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u011f\3\3\1\u012a"+
    "\35\3\2\0\3\3\1\0\2\3\1\u0194\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0195"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u0196"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u0197"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u0198"+
    "\7\3\1\u0199\26\3\2\0\3\3\1\0\5\3\23\0"+
    "\15\3\1\u019a\26\3\2\0\3\3\1\0\5\3\23\0"+
    "\1\u019b\43\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\107\1\3\1\107\3\3\1\u019c\33\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u0164\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\15\3\1\u0154\26\3\2\0\3\3\1\0"+
    "\2\3\1\u019d\2\3\23\0\4\3\1\u019e\10\3\1\u019f"+
    "\6\3\1\u01a0\17\3\2\0\3\3\1\0\2\3\1\235"+
    "\2\3\23\0\44\3\2\0\3\3\1\0\3\3\1\u01a1"+
    "\1\u01a2\23\0\44\3\2\0\3\3\1\0\4\3\1\u01a3"+
    "\23\0\44\3\2\0\3\3\1\0\5\3\23\0\5\3"+
    "\1\u01a4\36\3\2\0\3\3\1\0\5\3\23\0\6\3"+
    "\1\u01a5\13\3\1\u01a6\21\3\2\0\3\3\1\0\5\3"+
    "\23\0\5\3\1\u01a7\36\3\2\0\3\3\1\0\5\3"+
    "\23\0\10\3\1\u01a8\33\3\2\0\3\3\1\0\5\3"+
    "\23\0\10\3\1\111\33\3\2\0\3\3\1\0\4\3"+
    "\1\107\23\0\44\3\2\0\3\3\1\0\5\3\23\0"+
    "\1\235\43\3\2\0\3\3\1\0\5\3\23\0\10\3"+
    "\1\u0126\33\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\u01a9\41\3\2\0\3\3\1\0\5\3\23\0\22\3"+
    "\1\107\21\3\2\0\3\3\1\0\2\3\1\302\2\3"+
    "\23\0\44\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\u01aa\1\3\1\u01ab\37\3\2\0\3\3\1\0\4\3"+
    "\1\u01ac\23\0\2\3\1\u01ad\41\3\2\0\3\3\1\0"+
    "\5\3\23\0\15\3\1\235\26\3\2\0\3\3\1\0"+
    "\5\3\23\0\35\3\1\211\6\3\2\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\276\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\3\1\u01ae\42\3\2\0\3\3\1\0"+
    "\5\3\23\0\21\3\1\107\22\3\2\0\3\3\1\0"+
    "\5\3\23\0\21\3\1\u0141\22\3\2\0\3\3\1\0"+
    "\5\3\23\0\23\3\1\u01af\20\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\u0121\43\3\2\0\3\3\1\0\5\3"+
    "\23\0\23\3\1\125\20\3\2\0\3\3\1\0\5\3"+
    "\23\0\12\3\1\107\31\3\2\0\1\3\1\u01b0\1\3"+
    "\1\0\5\3\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\2\3\1\u01b1\11\3\1\u01b2\27\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u01b3\4\3\1\107\34\3"+
    "\2\0\3\3\1\0\3\3\1\235\1\3\23\0\44\3"+
    "\2\0\3\3\1\0\4\3\1\u01b4\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\4\3\1\u01b5\37\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u01b6\41\3\2\0"+
    "\3\3\1\0\2\3\1\u01b7\2\3\23\0\44\3\2\0"+
    "\3\3\1\0\4\3\1\u01b8\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u01b9\41\3\2\0\3\3"+
    "\1\0\1\u01ba\4\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\15\3\1\u01bb\26\3\2\0\3\3\1\0"+
    "\5\3\23\0\2\3\1\u01bc\41\3\2\0\3\3\1\0"+
    "\3\3\1\u01bd\1\3\23\0\44\3\2\0\3\3\1\0"+
    "\3\3\1\u01be\1\3\23\0\4\3\1\312\2\3\1\u0119"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u01bf"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\1\u01c0\43\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u01c1\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\10\3\1\110\33\3"+
    "\2\0\3\3\1\0\5\3\23\0\7\3\1\242\34\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u01c2\41\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u01c3\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u01c4\37\3"+
    "\2\0\3\3\1\0\4\3\1\u01c5\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u01c6\5\3\1\u01c7"+
    "\4\3\1\u01c8\5\3\1\u01c9\20\3\2\0\3\3\1\0"+
    "\5\3\23\0\13\3\1\303\30\3\2\0\3\3\1\0"+
    "\3\3\1\315\1\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\7\3\1\107\34\3\2\0\3\3\1\0"+
    "\5\3\23\0\15\3\1\u01ca\26\3\2\0\3\3\1\0"+
    "\3\3\1\140\1\3\23\0\44\3\2\0\3\3\1\0"+
    "\3\3\1\u0164\1\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\4\3\1\u01cb\37\3\2\0\3\3\1\0"+
    "\5\3\23\0\4\3\1\u01cc\37\3\2\0\3\3\1\0"+
    "\2\3\1\u01cd\2\3\23\0\5\3\1\110\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\12\3\1\u01ce\31\3\2\0"+
    "\3\3\1\0\3\3\1\u01cf\1\3\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\10\3\1\65\5\3\1\u011e"+
    "\25\3\2\0\3\3\1\0\5\3\23\0\23\3\1\107"+
    "\20\3\2\0\3\3\1\0\5\3\23\0\41\3\1\u01d0"+
    "\2\3\4\0\1\u014e\2\0\1\u014e\74\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\u01d1\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u018c\36\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\303\36\3\2\0\3\3\1\0"+
    "\5\3\23\0\7\3\1\u01d2\34\3\2\0\3\3\1\0"+
    "\5\3\23\0\15\3\1\107\26\3\2\0\3\3\1\0"+
    "\4\3\1\u01d3\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\2\3\1\u01d4\41\3\2\0\3\3\1\0\3\3"+
    "\1\110\1\3\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\7\3\1\u01d5\34\3\2\0\3\3\1\0\3\3"+
    "\1\u01d6\1\3\23\0\44\3\2\0\3\3\1\0\2\3"+
    "\1\u0142\2\3\23\0\44\3\4\0\1\u015b\2\0\1\u015b"+
    "\73\0\33\u01d7\1\0\46\u01d7\15\307\1\u015d\1\u01d8\63\307"+
    "\1\0\3\3\1\0\5\3\23\0\7\3\1\u01d9\34\3"+
    "\2\0\3\3\1\0\5\3\23\0\10\3\1\u0109\33\3"+
    "\2\0\3\3\1\0\5\3\23\0\7\3\1\347\34\3"+
    "\2\0\3\3\1\0\4\3\1\u01a5\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\5\3\1\111\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\13\3\1\u01da\30\3\2\0"+
    "\3\3\1\0\5\3\23\0\4\3\1\110\37\3\2\0"+
    "\3\3\1\0\4\3\1\u01db\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u01dc\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\22\3\1\303\21\3\2\0\3\3\1\0"+
    "\3\3\1\u01dd\1\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u01de\36\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u01df\36\3\2\0\3\3\1\0"+
    "\2\3\1\u01e0\2\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u01e1\6\3\1\u01e2\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\7\3\1\u01e3\34\3\40\0"+
    "\1\u01e4\43\0\3\3\1\0\5\3\23\0\5\3\1\u01d2"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\1\u01bc\43\3"+
    "\2\0\3\3\1\0\5\3\23\0\6\3\1\u01e5\35\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0154\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\24\3\1\u0114\17\3"+
    "\2\0\3\3\1\0\5\3\23\0\6\3\1\110\35\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u01e6\41\3"+
    "\2\0\3\3\1\0\5\3\23\0\7\3\1\u01e7\34\3"+
    "\2\0\3\3\1\0\5\3\23\0\15\3\1\u01e8\26\3"+
    "\2\0\3\3\1\0\4\3\1\u011e\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\17\3\1\273\24\3\2\0"+
    "\3\3\1\0\5\3\23\0\10\3\1\u01e9\33\3\2\0"+
    "\3\3\1\0\5\3\23\0\15\3\1\u01ea\2\3\1\u01eb"+
    "\23\3\2\0\3\3\1\0\3\3\1\303\1\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u01c6"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u01ec"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u01ed"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\5\3\1\347"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u01ee"+
    "\27\3\2\0\3\3\1\0\2\3\1\u01ef\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u01f0"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u01f1"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u01f2"+
    "\1\3\1\u01dc\34\3\2\0\3\3\1\0\5\3\23\0"+
    "\5\3\1\235\36\3\2\0\3\3\1\0\5\3\23\0"+
    "\21\3\1\110\22\3\2\0\3\3\1\0\5\3\23\0"+
    "\13\3\1\u01f3\30\3\2\0\3\3\1\0\5\3\23\0"+
    "\7\3\1\u01f4\34\3\2\0\3\3\1\0\3\3\1\u01f5"+
    "\1\3\23\0\44\3\2\0\3\3\1\0\5\3\23\0"+
    "\14\3\1\326\27\3\2\0\3\3\1\0\5\3\23\0"+
    "\14\3\1\303\27\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\u010c\41\3\2\0\3\3\1\0\5\3\23\0"+
    "\14\3\1\u01f6\27\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\u01f7\41\3\2\0\3\3\1\0\5\3\23\0"+
    "\2\3\1\u01f8\41\3\2\0\3\3\1\0\5\3\23\0"+
    "\1\u01f9\43\3\2\0\3\3\1\0\5\3\23\0\14\3"+
    "\1\u01fa\27\3\2\0\3\3\1\0\5\3\23\0\1\3"+
    "\1\u01fb\1\3\1\u01fc\1\3\1\u01fd\20\3\1\u01fe\15\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u01ff\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u0172\41\3"+
    "\2\0\3\3\1\0\4\3\1\u0200\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u0201\41\3\2\0"+
    "\3\3\1\0\5\3\23\0\7\3\1\u011f\34\3\2\0"+
    "\3\3\1\0\5\3\23\0\4\3\1\u0202\37\3\2\0"+
    "\3\3\1\0\4\3\1\u0203\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u0204\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\2\3\1\u0205\41\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\u0206\13\3\1\u0207\27\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u0208\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u0187\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\22\3\1\347\21\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\u0209\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\2\3\1\u020a\41\3\2\0\3\3\1\0"+
    "\5\3\23\0\2\3\1\u020b\41\3\2\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\235\27\3\2\0\1\3\1\u01b0"+
    "\1\3\1\0\5\3\23\0\1\u020c\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\21\3\1\u020d\22\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u020e\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\14\3\1\u020f\27\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\146\36\3\2\0\3\3"+
    "\1\0\5\3\23\0\11\3\1\u0210\32\3\2\0\3\3"+
    "\1\0\2\3\1\u0211\2\3\23\0\17\3\1\u0212\24\3"+
    "\2\0\3\3\1\0\4\3\1\u0213\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\135\41\3\2\0"+
    "\3\3\1\0\4\3\1\u0214\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\3\3\1\107\40\3\2\0\3\3"+
    "\1\0\5\3\23\0\10\3\1\u0215\33\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\u0216\11\3\1\273\24\3"+
    "\2\0\3\3\1\0\3\3\1\u0217\1\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\u0218\27\3"+
    "\2\0\3\3\1\0\2\3\1\u0219\2\3\23\0\5\3"+
    "\1\235\36\3\2\0\3\3\1\0\5\3\23\0\4\3"+
    "\1\u021a\37\3\2\0\3\3\1\0\5\3\23\0\1\111"+
    "\43\3\2\0\3\3\1\0\5\3\23\0\1\3\1\u021b"+
    "\42\3\2\0\3\3\1\0\5\3\23\0\43\3\1\u021c"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u021d\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\10\3\1\235\33\3"+
    "\2\0\3\3\1\0\5\3\23\0\15\3\1\273\26\3"+
    "\2\0\3\3\1\0\5\3\23\0\5\3\1\u021e\36\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\u021f\27\3"+
    "\2\0\3\3\1\0\2\3\1\u0220\2\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\u0221\27\3"+
    "\2\0\3\3\1\0\5\3\23\0\22\3\1\u0222\21\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\3\1\u0158\42\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u0223\41\3"+
    "\2\0\3\3\1\0\4\3\1\u0224\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\5\3\1\u0225\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\107\6\3\1\u0217\34\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0109\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\u0226\43\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\227\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\11\3\1\u0199\32\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u0180\41\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u0227\41\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u0228\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u0229\41\3\2\0"+
    "\3\3\1\0\5\3\23\0\42\3\1\u022a\1\3\2\0"+
    "\3\3\1\0\5\3\23\0\11\3\1\107\32\3\2\0"+
    "\3\3\1\0\2\3\1\303\2\3\23\0\44\3\2\0"+
    "\3\3\1\0\3\3\1\u0106\1\3\23\0\44\3\2\0"+
    "\3\3\1\0\5\3\23\0\10\3\1\u0121\33\3\2\0"+
    "\3\3\1\0\5\3\23\0\23\3\1\347\20\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\274\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\u022b\36\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\125\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\110\36\3\2\0\3\3\1\0"+
    "\4\3\1\235\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\5\3\1\u022c\36\3\2\0\3\3\1\0\5\3"+
    "\23\0\14\3\1\u022d\27\3\2\0\3\3\1\0\5\3"+
    "\23\0\7\3\1\u0221\34\3\2\0\3\3\1\0\5\3"+
    "\23\0\14\3\1\u022e\27\3\2\0\3\3\1\0\2\3"+
    "\1\u01bc\2\3\23\0\44\3\2\0\3\3\1\0\2\3"+
    "\1\u022f\2\3\23\0\44\3\41\0\1\u0230\42\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u0231\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\u0232\26\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\u0192\36\3\2\0\3\3"+
    "\1\0\4\3\1\u01a2\23\0\1\u0113\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\7\3\1\u0233\34\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u0234\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\7\3\1\u0235\34\3\2\0\3\3"+
    "\1\0\5\3\23\0\14\3\1\220\27\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\63\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\10\3\1\u01b8\33\3\2\0\3\3"+
    "\1\0\5\3\23\0\11\3\1\u0236\32\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u0237\41\3\2\0\3\3"+
    "\1\0\4\3\1\302\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\u01bc\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\u01d4\43\3\2\0\3\3\1\0\3\3"+
    "\1\u010c\1\3\23\0\44\3\2\0\3\3\1\0\5\3"+
    "\23\0\14\3\1\u0238\27\3\2\0\3\3\1\0\5\3"+
    "\23\0\15\3\1\312\26\3\2\0\3\3\1\0\5\3"+
    "\23\0\5\3\1\220\36\3\2\0\3\3\1\0\5\3"+
    "\23\0\1\3\1\u0239\42\3\2\0\3\3\1\0\5\3"+
    "\23\0\5\3\1\241\36\3\2\0\3\3\1\0\4\3"+
    "\1\u023a\23\0\44\3\2\0\3\3\1\0\5\3\23\0"+
    "\1\u023b\43\3\2\0\3\3\1\0\5\3\23\0\22\3"+
    "\1\u0114\21\3\2\0\3\3\1\0\5\3\23\0\7\3"+
    "\1\u023c\34\3\2\0\3\3\1\0\3\3\1\u023d\1\3"+
    "\23\0\44\3\2\0\3\3\1\0\5\3\23\0\1\u023e"+
    "\43\3\2\0\3\3\1\0\2\3\1\u023f\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0240"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\7\3\1\114"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\1\3\1\u0241"+
    "\42\3\2\0\3\3\1\0\5\3\23\0\10\3\1\u01e5"+
    "\33\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u0242"+
    "\27\3\2\0\3\3\1\0\2\3\1\u0157\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u0243"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u0244"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u0139"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u0245"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\10\3\1\u0246"+
    "\33\3\2\0\3\3\1\0\5\3\23\0\6\3\1\u0247"+
    "\35\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0248"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\17\3\1\347"+
    "\24\3\2\0\3\3\1\0\5\3\23\0\1\u0249\43\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\224\43\3\2\0"+
    "\3\3\1\0\5\3\23\0\5\3\1\u024a\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\7\3\1\u01d4\34\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\u024b\41\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u024c\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\u0133\6\3\1\303\17\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\3\1\110\42\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\u024d\43\3\2\0"+
    "\3\3\1\0\5\3\23\0\15\3\1\u024e\26\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u024f\27\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u0109\27\3\2\0"+
    "\3\3\1\0\1\u0250\4\3\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\5\3\1\u011e\36\3\2\0\3\3"+
    "\1\0\5\3\23\0\14\3\1\u0251\27\3\2\0\3\3"+
    "\1\0\5\3\23\0\7\3\1\u0252\34\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u0253\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\u0254\26\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\107\43\3\2\0\3\3\1\0"+
    "\5\3\23\0\22\3\1\u0255\21\3\2\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\u010c\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u0199\36\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u0256\36\3\2\0\3\3\1\0"+
    "\5\3\23\0\24\3\1\273\17\3\2\0\3\3\1\0"+
    "\2\3\1\u0257\2\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\35\3\1\u0250\6\3\2\0\3\3\1\0"+
    "\5\3\23\0\14\3\1\u0258\27\3\2\0\3\3\1\0"+
    "\5\3\23\0\1\324\1\3\1\302\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\6\3\1\u024c\4\3\1\110\30\3"+
    "\2\0\3\3\1\0\5\3\23\0\13\3\1\u0259\30\3"+
    "\2\0\3\3\1\0\2\3\1\u0133\2\3\23\0\44\3"+
    "\40\0\1\u025a\43\0\3\3\1\0\5\3\23\0\1\u025b"+
    "\43\3\2\0\3\3\1\0\2\3\1\u025c\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\1\115\43\3"+
    "\2\0\3\3\1\0\2\3\1\u025d\2\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\u025e\27\3"+
    "\2\0\3\3\1\0\2\3\1\u025f\2\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\3\1\u0260\42\3"+
    "\2\0\3\3\1\0\3\3\1\u01dc\1\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u0261\41\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0262\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\23\3\1\u0263\20\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u01f9\41\3"+
    "\2\0\3\3\1\0\5\3\23\0\6\3\1\u0154\35\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0264\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\5\3\1\u0265\36\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u0266\41\3"+
    "\2\0\3\3\1\0\2\3\1\u0267\2\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\u0268\43\3\2\0"+
    "\3\3\1\0\5\3\23\0\2\3\1\107\11\3\1\u0160"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\6\3\1\u0269"+
    "\35\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u026a"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\7\3\1\u0224"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\3\3\1\u026b"+
    "\40\3\2\0\3\3\1\0\5\3\23\0\10\3\1\u024c"+
    "\33\3\2\0\3\3\1\0\5\3\23\0\7\3\1\u026c"+
    "\34\3\2\0\3\3\1\0\2\3\1\u026d\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u0199"+
    "\37\3\2\0\3\3\1\0\4\3\1\u026e\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\u017f\27\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u026f\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\40\3\1\107\3\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0270\37\3"+
    "\2\0\3\3\1\0\2\3\1\u0271\2\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\14\3\1\u0272\27\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u0273\37\3"+
    "\2\0\1\3\1\u0274\1\3\1\0\5\3\23\0\44\3"+
    "\2\0\3\3\1\0\2\3\1\u011e\2\3\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\17\3\1\u0275\24\3"+
    "\2\0\3\3\1\0\5\3\23\0\20\3\1\u01b8\23\3"+
    "\2\0\3\3\1\0\3\3\1\u0276\1\3\23\0\44\3"+
    "\46\0\1\u0277\35\0\3\3\1\0\5\3\23\0\22\3"+
    "\1\u0278\21\3\2\0\3\3\1\0\5\3\23\0\24\3"+
    "\1\u01a0\17\3\2\0\3\3\1\0\5\3\23\0\2\3"+
    "\1\u0279\41\3\2\0\3\3\1\0\5\3\23\0\17\3"+
    "\1\u0239\24\3\2\0\3\3\1\0\5\3\23\0\10\3"+
    "\1\264\33\3\2\0\3\3\1\0\5\3\23\0\10\3"+
    "\1\u027a\33\3\2\0\3\3\1\0\5\3\23\0\17\3"+
    "\1\264\24\3\2\0\3\3\1\0\5\3\23\0\1\u027b"+
    "\43\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u027c"+
    "\26\3\2\0\1\3\1\u027d\1\3\1\0\5\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\2\3\1\302"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u027e"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u027f"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\7\3\1\u0280"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0281"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u027e"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\23\3\1\207"+
    "\20\3\2\0\3\3\1\0\5\3\23\0\17\3\1\207"+
    "\24\3\2\0\3\3\1\0\5\3\23\0\16\3\1\u0282"+
    "\25\3\2\0\3\3\1\0\5\3\23\0\16\3\1\u0283"+
    "\25\3\2\0\3\3\1\0\5\3\23\0\10\3\1\u0284"+
    "\33\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u0285"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u0286"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u0265"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\6\3\1\140"+
    "\35\3\2\0\1\3\1\u0287\1\3\1\0\5\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\7\3\1\u0114"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u0288"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\2\3\1\235"+
    "\41\3\2\0\3\3\1\0\3\3\1\u01bd\1\3\23\0"+
    "\1\3\1\u0109\2\3\1\u0289\37\3\2\0\3\3\1\0"+
    "\5\3\23\0\4\3\1\u028a\37\3\2\0\3\3\1\0"+
    "\2\3\1\u028b\2\3\23\0\44\3\2\0\3\3\1\0"+
    "\2\3\1\300\2\3\23\0\44\3\2\0\3\3\1\0"+
    "\5\3\23\0\5\3\1\u0127\36\3\2\0\1\3\1\u028c"+
    "\1\3\1\0\5\3\23\0\10\3\1\u027a\33\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u028d\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\u028e\3\3\1\u028f\22\3"+
    "\2\0\3\3\1\0\5\3\23\0\10\3\1\u0154\33\3"+
    "\2\0\3\3\1\0\5\3\23\0\7\3\1\u0141\34\3"+
    "\2\0\3\3\1\0\5\3\23\0\12\3\1\u0290\7\3"+
    "\1\u0291\21\3\2\0\3\3\1\0\5\3\23\0\7\3"+
    "\1\u0292\34\3\2\0\3\3\1\0\5\3\23\0\14\3"+
    "\1\u0293\27\3\2\0\3\3\1\0\5\3\23\0\1\324"+
    "\43\3\2\0\3\3\1\0\5\3\23\0\4\3\1\u0229"+
    "\37\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u0294"+
    "\27\3\2\0\3\3\1\0\3\3\1\u0295\1\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u0296"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u0297"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\7\3\1\u0298"+
    "\34\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u0299"+
    "\27\3\2\0\3\3\1\0\3\3\1\u029a\1\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\22\3\1\u029b"+
    "\21\3\2\0\3\3\1\0\2\3\1\u029c\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\1\3\1\u01a6"+
    "\42\3\2\0\3\3\1\0\5\3\23\0\22\3\1\u029d"+
    "\21\3\2\0\3\3\1\0\5\3\23\0\16\3\1\u029e"+
    "\25\3\2\0\3\3\1\0\3\3\1\u011f\1\3\23\0"+
    "\44\3\2\0\3\3\1\0\2\3\1\u01a5\2\3\23\0"+
    "\44\3\2\0\3\3\1\0\5\3\23\0\5\3\1\u0139"+
    "\36\3\2\0\3\3\1\0\5\3\23\0\2\3\1\u029f"+
    "\41\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u01a0"+
    "\26\3\2\0\3\3\1\0\5\3\23\0\14\3\1\u02a0"+
    "\27\3\2\0\3\3\1\0\5\3\23\0\6\3\1\u02a1"+
    "\35\3\2\0\3\3\1\0\5\3\23\0\15\3\1\u01ea"+
    "\26\3\2\0\3\3\1\0\4\3\1\u02a2\23\0\44\3"+
    "\2\0\3\3\1\0\5\3\23\0\12\3\1\u02a3\31\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\u02a4\43\3\2\0"+
    "\3\3\1\0\5\3\23\0\5\3\1\u02a5\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\5\3\1\u02a6\36\3\2\0"+
    "\3\3\1\0\5\3\23\0\1\u02a7\43\3\2\0\3\3"+
    "\1\0\5\3\23\0\14\3\1\u02a8\27\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\u02a9\26\3\2\0\3\3"+
    "\1\0\5\3\23\0\4\3\1\u02aa\37\3\2\0\3\3"+
    "\1\0\5\3\23\0\2\3\1\u02ab\41\3\2\0\3\3"+
    "\1\0\5\3\23\0\16\3\1\u02ac\25\3\2\0\3\3"+
    "\1\0\5\3\23\0\1\3\1\u02ad\2\3\1\u028a\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\2\3\1\u02ae\41\3"+
    "\2\0\3\3\1\0\5\3\23\0\4\3\1\u02af\37\3"+
    "\2\0\3\3\1\0\5\3\23\0\1\u02b0\43\3\2\0"+
    "\3\3\1\0\5\3\23\0\14\3\1\u02b1\27\3\2\0"+
    "\3\3\1\0\4\3\1\u02b2\23\0\44\3\2\0\3\3"+
    "\1\0\5\3\23\0\15\3\1\u02ab\26\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[44088];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\12\1\1\11\57\1\1\0\1\1\1\0"+
    "\2\1\1\11\204\1\1\0\225\1\1\0\20\1\1\0"+
    "\151\1\1\11\13\1\1\0\113\1\1\0\51\1\1\0"+
    "\34\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[690];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int linea;
public int PrimeraColumna;
public int UltimaColumna;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 220) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return ERROR;
            } 
            // fall through
          case 15: break;
          case 2: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn +1 ; UltimaColumna=yycolumn+yylength(); return IDENTIFICADORES;
            } 
            // fall through
          case 16: break;
          case 3: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return INT;
            } 
            // fall through
          case 17: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 18: break;
          case 5: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return BIT;
            } 
            // fall through
          case 19: break;
          case 6: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return OPERADORES;
            } 
            // fall through
          case 20: break;
          case 7: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return STRINGERROR;
            } 
            // fall through
          case 21: break;
          case 8: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return FLOAT;
            } 
            // fall through
          case 22: break;
          case 9: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn +1; UltimaColumna=yycolumn+yylength(); return RESERVADAS;
            } 
            // fall through
          case 23: break;
          case 10: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return COMMENT;
            } 
            // fall through
          case 24: break;
          case 11: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return FLOATERROR;
            } 
            // fall through
          case 25: break;
          case 12: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return ERRORCOMMENT;
            } 
            // fall through
          case 26: break;
          case 13: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return STRING;
            } 
            // fall through
          case 27: break;
          case 14: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return MULTICOMMENT;
            } 
            // fall through
          case 28: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
