package lexCode;
import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getSymbol(){
    return this.s;
    }    
:};

terminal Truncate, Go, Id, Int, Float, Bit, String, Punto, If, Exists,Add, Primary, espacio,
    Coma, Punto_Coma, Negar, Drop, Database, Index, View, User, Table, On, Of,
    Alter, Column, Collate, Rebuild, Constraint, Parentesis_a, Parentesis_c, Nonclustered, Asc, Desc, Foreign, Key, References, Null, Not, Unique,
    INT, FLOAT, BIT, VARCHAR, NVARCHAR, Begin, End, Commit, Save, Rollback, Tran, Transaction, Arroba, Insert, Into, Values, Select, Top, Percent,
    Asterisco, As, All, Distinct, Corchete_a, Corchete_c, Count, Avg, Max, Min, Sum, From, Join, Inner, Outer, Left, Right, Full, Igual, Group,
    By, Having, MayorQue, MenorQue, MayorIgual, MenorIgual, And, Or, Order;

non terminal  INICIO, SENTENCIA, DML, DDL, TCL, TSQL, SELECT, DELETE, IF_EXISTS,
              INSERT, UPDATE, DROP, TRUNCATE, CREATE, ALTER, TABLENAME, TABLE_NAMES,
              DATABASE_NAMES, D_DATABASE, D_INDEX, D_VIEW, D_USER, D_TABLE, D_SENTENCE ,
              INDEX_ON, INDEX_SIN_ON, FIN, I_STATEMENT, IF, TABLENAME_TWO, A_PARAM_INDEX, A_PARAM_ADD, A_COLUMN_OPS, BOOL_OP,
              A_PARAM_INDEX_OP, TABLE_CONSTRAINT, TABLE_CONSTRAINT_OPS, A_ADD_FK_CONST, A_ADD_OP_CONST, OPS, OP_FK, T_INDEX_INIT, T_INDEX,  
              T_INDEX_OP, COLUMN_INDEX, COL_INDEX, A_PARAM_COLUMN, RESERVED, BEGIN_TRANSACTION, COMMIT, ROLLBACK, SAVEPOINT, END, TRANS_OP, 
              TRANS_NAME_OP, INSERT_COLUMN_OP, VALUES, SELECT_TYPE, EX_TYPE, PERCENT, BODY, AS_STATEMENT, METHOD_NAME, REP, EXP, FROM, ON ,JOINS,
              UNION, GROUP, ID_REP, HAVING, EXPR, REP_STATEMENT, ORDER, NOT, NUM_TYPE, ORDER_TYPE, BY, CONDITION;

start with INICIO;

    INICIO ::= SENTENCIA Punto_Coma | SENTENCIA Go
    ;
    SENTENCIA ::= DML | DDL | TCL | TSQL
    ;

    //Aqui comienzan las sentencias DDL

    DDL ::= DROP | CREATE | ALTER | TRUNCATE
    ;
    TRUNCATE ::= Truncate Table TABLENAME
    ;
    TABLENAME ::= Id | Id Punto Id | Id Punto Id Punto Id
    ;
    DROP::= Drop Table TABLENAME | Drop Database Id TABLE_NAMES | Drop User Id | Drop Index IF I_STATEMENT | Drop View IF TABLENAME_TWO
    ;
    IF ::= If Exists |
    ;
    I_STATEMENT ::=  INDEX_ON | INDEX_SIN_ON
    ;
    INDEX_ON ::= On TABLENAME | On TABLENAME Coma INDEX_ON
    ;
    INDEX_SIN_ON ::= TABLENAME | TABLENAME Coma INDEX_SIN_ON
    ;
    TABLE_NAMES ::= Coma Id TABLE_NAMES | Id |
    ;
    TABLENAME_TWO ::= Id Punto Id Coma TABLENAME_TWO | Id Coma TABLENAME_TWO | Id Punto Id | Id
    ;
    
    //ALTER
    ALTER ::= Alter Table TABLENAME COL_INDEX | Alter View SELECT | Alter Database Id A_COLUMN_OPS
    ;
    COL_INDEX ::= Alter Column A_PARAM_COLUMN | Alter Column Alter Index A_PARAM_INDEX | Alter Column Add A_PARAM_ADD | Alter Column Id RESERVED 
                  | Alter Column Id RESERVED BOOL_OP 
    ;
    RESERVED ::= INT | FLOAT | VARCHAR Parentesis_a Int Parentesis_c | BIT
    ;
    A_PARAM_COLUMN ::= TABLENAME_TWO A_COLUMN_OPS
    ;
    A_COLUMN_OPS ::= Collate Id | Collate Id BOOL_OP
    ;
    BOOL_OP ::= Null | Not Null
    ;
    A_PARAM_INDEX ::= TABLENAME_TWO Rebuild A_PARAM_INDEX_OP
    ;
    A_PARAM_INDEX_OP ::= Nonclustered | 
    ;
    A_PARAM_ADD ::= Id TABLENAME_TWO A_COLUMN_OPS | TABLE_CONSTRAINT | T_INDEX_INIT | COLUMN_INDEX
    ;
    TABLE_CONSTRAINT ::= Constraint Id | TABLE_CONSTRAINT_OPS
    ;
    TABLE_CONSTRAINT_OPS ::= Primary Key A_ADD_OP_CONST | Unique A_ADD_OP_CONST | Foreign Key A_ADD_FK_CONST
    ;
    A_ADD_OP_CONST ::= Nonclustered Parentesis_a OPS Parentesis_c
    ;
    OPS ::= Id Asc Coma OPS | Id Desc Coma OPS | Id Coma OPS | Id Asc | Id Desc | Id
    ;
    A_ADD_FK_CONST ::= Parentesis_a OP_FK Parentesis_c References TABLENAME Parentesis_a OP_FK Parentesis_c
    ;
    OP_FK ::= Id Coma OP_FK | Id
    ;
    T_INDEX_INIT ::= Index Id T_INDEX
    ;
    T_INDEX ::= Nonclustered Parentesis_a OPS Parentesis_c T_INDEX_OP | Parentesis_a OPS Parentesis_c
    ;
    T_INDEX_OP ::= On TABLENAME | 
    ;
    COLUMN_INDEX ::= Index Of | Index Id Nonclustered
    ;

    // Aqui Van las TCL

    TCL ::= BEGIN_TRANSACTION | COMMIT | ROLLBACK | SAVEPOINT | END
    ;
    BEGIN_TRANSACTION ::= Begin TRANS_OP
    ;
    TRANS_OP ::= Tran | Transaction
    ;
    COMMIT ::= Commit TRANS_OP TRANS_NAME_OP
    ;
    TRANS_NAME_OP ::= Id | Arroba Id | 
    ;
    ROLLBACK ::= Rollback TRANS_OP TRANS_NAME_OP
    ;
    SAVEPOINT ::= Save TRANS_OP Id | Save TRANS_OP Arroba Id
    ;
    END ::= Begin INICIO End
    ;

    //Aqui comienzan las DML
    DML ::= INSERT | SELECT | UPDATE | DELETE
    ;
    INSERT ::= Insert Into TABLENAME Parentesis_a INSERT_COLUMN_OP Parentesis_c Values Parentesis_a VALUES Parentesis_c
    ;
    INSERT_COLUMN_OP ::= Id Coma INSERT_COLUMN_OP | Id
    ;
    VALUES ::= Id Coma VALUES | String Coma VALUES | Int Coma VALUES | Float Coma VALUES | Id | String | Int | Float
    ;

    SELECT ::= Select SELECT_TYPE
    ;
    SELECT_TYPE ::= All EX_TYPE | Distinct EX_TYPE | EX_TYPE
    ;
    EX_TYPE ::= Top Parentesis_a NUM_TYPE Parentesis_c PERCENT | PERCENT
    ;
    PERCENT ::= Percent BODY | BODY
    ;
    BODY ::= Asterisco Coma BODY | Id AS_STATEMENT Coma BODY | Id Punto Id AS_STATEMENT Coma BODY | Asterisco FROM | Id AS_STATEMENT FROM 
            | Id Punto Id AS_STATEMENT FROM | METHOD_NAME AS_STATEMENT Coma BODY | METHOD_NAME AS_STATEMENT FROM
    ;
    AS_STATEMENT ::= As Id | As Corchete_a Id REP Corchete_c | 
    ;
    REP ::= Id REP | Id
    ;
    METHOD_NAME ::= Count Parentesis_a Asterisco Parentesis_c | Count Parentesis_a Int Parentesis_c | Sum Parentesis_a TABLENAME_TWO Parentesis_c
                    | Avg Parentesis_a TABLENAME_TWO Parentesis_c | Max Parentesis_a TABLENAME_TWO Parentesis_c 
                    | Min Parentesis_a TABLENAME_TWO Parentesis_c
    ;
    FROM ::= From TABLENAME Id JOINS | From TABLENAME JOINS | 
    ;
    GROUP ::= Group By TABLENAME_TWO | 
    ;
    JOINS ::= Inner Join UNION | Outer Join UNION | Left Join UNION | Left Outer Join UNION | Right Join UNION | Right Outer Join UNION
              | Full Outer Join UNION | GROUP 
    ;
    UNION ::= TABLENAME Id ON | TABLENAME ON
    ;
    ON ::= On TABLENAME Igual TABLENAME JOINS 
    ;
    GROUP ::= Group BY
    ;
    BY ::= By TABLENAME_TWO HAVING
    ;
    HAVING ::= Having METHOD_NAME EXPR 
    ;
    EXPR ::= CONDITION NUM_TYPE REP_STATEMENT
    ;
    CONDITION ::= MayorQue | MenorQue | Igual | MayorIgual | MenorIgual
    ;
    NUM_TYPE ::= Int | Float 
    ;
    REP_STATEMENT ::= And NOT METHOD_NAME EXPR | Or NOT METHOD_NAME EXPR | ORDER
    ;
    NOT ::= Not | 
    ;
    ORDER ::= Order By TABLENAME_TWO ORDER_TYPE | 
    ;
    ORDER_TYPE ::= Asc | Desc
    ;